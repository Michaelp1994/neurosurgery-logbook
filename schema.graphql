# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The supervisor model"""
type Supervisor {
  id: Float!
  name: String!
  rotations: [Rotation!]!
  consults: [Consult!]!
  user: User!
  userId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""The hospital model"""
type Hospital {
  id: Float!
  name: String!
  urnMask: String
  consults: [Consult!]!
  rotations: [Rotation!]!
  user: User!
  userId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The SET Level model"""
type SetLevel {
  id: Float!
  name: String!
  rotations: [Rotation!]
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The rotation model"""
type Rotation {
  id: Float!
  name: String!
  startDate: DateTime!
  endDate: DateTime!
  userId: Float!
  setLevelId: Float!
  hospitalId: Float!
  user: User!
  setLevel: SetLevel!
  hospital: Hospital!
  supervisors: [Supervisor!]!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The user model"""
type User {
  id: Float!
  firstName: String!
  lastName: String!
  email: String!
  role: UserRole!
  consults: [Consult!]
  rotations: [Rotation!]
  hospitals: [Hospital!]
  supervisors: [Supervisor!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The basic roles a user can have"""
enum UserRole {
  USER
  ADMIN
}

"""User login authentication model"""
type Token {
  id: Float!
  token: String!
  firstName: String!
  lastName: String!
  role: UserRole!
}

"""The Procedure Topic Model"""
type ProcedureTopic {
  id: Float!
  name: String!
  shortName: String!
  totalConsults: Float!
  types: [ProcedureType!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The procedure type model"""
type ProcedureType {
  id: Float!
  name: String!
  procedures: [Procedure!]!
  topicId: Float!
  totalConsults: Float!
  topic: ProcedureTopic!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The procedure model"""
type Procedure {
  id: Float!
  name: String!
  typeId: Float!
  totalConsults: Float!
  totalPrimaryConsults: Float!
  totalSecondaryConsults: Float!
  totalAssistantConsults: Float!
  type: ProcedureType!
  consults: [ConsultProcedure!]!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Supervision Level model"""
type SupervisionLevel {
  id: Float!
  name: String!
  procedures: [ConsultProcedure!]
  totalConsults: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The many-to-many relation between Consult & Procedure"""
type ConsultProcedure {
  id: Float!
  consultId: Float!
  procedureId: Float!
  supervisionLevelId: Float!
  supervisionLevel: SupervisionLevel!
  consult: Consult!
  procedure: Procedure!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The ASA Grade model"""
type AsaGrade {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Ethnicity model"""
type Ethnicity {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Funding Type model"""
type FundingType {
  id: Float!
  name: String!
  totalConsults: Float!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Return To Theatre model"""
type ReturnToTheatre {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Type Of Anaesthetic model"""
type TypeOfAnaesthetic {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Unplanned ICU model"""
type UnplannedIcu {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Unplanned Readmission model"""
type UnplannedReadmission {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Wound Infection Risk model"""
type WoundInfectionRisk {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Mortality Classification model"""
type MortalityClassification {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The Outcome model"""
type Outcome {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""Procedure Duration"""
type CaseDuration {
  hours: Float!
  minutes: Float!
}

"""The consult/case model"""
type Consult {
  id: Float!
  name: String!
  urn: String!
  setLevelId: Float!
  rotationPeriodId: Float!
  userId: Float!
  hospitalId: Float!
  supervisorId: Float!
  procedureDate: DateTime
  startTime: LocalTime
  endTime: LocalTime
  gender: String
  prophylaxis: String
  dateOfBirth: DateTime
  admissionDate: DateTime
  diagnosisDate: DateTime
  dischargeDate: DateTime
  recurrenceDate: DateTime
  isCompleted: Boolean
  admissionCategoryId: Float
  ethnicityId: Float
  unplannedReadmissionId: Float
  fundingTypeId: Float
  asaGradeId: Float
  outcomeId: Float
  mortalityClassificationId: Float
  woundInfectionRiskId: Float
  typeOfAnaestheticId: Float
  unplannedIcuId: Float
  returnToTheatreId: Float
  outcome: Outcome
  mortalityClassification: MortalityClassification
  ethnicity: Ethnicity
  admissionCategory: AdmissionCategory
  unplannedReadmission: UnplannedReadmission
  fundingType: FundingType
  asaGrade: AsaGrade
  woundInfectionRisk: WoundInfectionRisk
  typeOfAnaesthetic: TypeOfAnaesthetic
  unplannedIcu: UnplannedIcu
  returnToTheatre: ReturnToTheatre
  preManagementDiagnosis: String
  recognisedCoMorbidities: String
  finalDiagnosis: String
  pathologicalDiagnoses: String
  discussedAtMdm: Boolean
  comments: String
  setLevel: SetLevel!
  rotationPeriod: Rotation!
  procedures: [ConsultProcedure!]!
  user: User!
  hospital: Hospital
  supervisor: Supervisor
  patientAge: Float
  procedureDuration: CaseDuration
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
}

"""
A local time string (i.e., with no associated timezone) in 24-hr `HH:mm[:ss[.SSS]]` format, e.g. `14:25` or `14:25:06` or `14:25:06.123`.
"""
scalar LocalTime

"""OCR Result for Patient Label"""
type RecognisedText {
  name: String
  urn: String
  dateOfBirth: String
}

"""OCR Result for Patient Label"""
type Statistics {
  totalConsults: Float
  spinal: Float
  cranial: Float
  peripheralNerveSurgery: Float
  primary: Float
  secondary: Float
  assistant: Float
  publicFunded: Float
  privateFunded: Float
  procedureTypeArray: [Float!]
}

"""The Admission Category model"""
type AdmissionCategory {
  id: Float!
  name: String!
  consults: [Consult!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""Input for adding a procedure to a consult"""
input ConsultProcedureInput {
  procedureId: Float!
  supervisionLevelId: Float!
}

"""Input for creating consult by a user"""
input CreateConsultInput {
  name: String!
  urn: String!
  selectedProcedures: [ConsultProcedureInput!]
  hospitalId: Float!
  rotationPeriodId: Float!
  setLevelId: Float
  procedureDate: DateTime!
  supervisorId: Float!
  dateOfBirth: DateTime!
  startTime: String
  endTime: String
  gender: String
  admissionCategoryId: Float
  ethnicityId: Float
  unplannedReadmissionId: Float
  fundingTypeId: Float
  asaGradeId: Float
  woundInfectionRiskId: Float
  typeOfAnaestheticId: Float
  unplannedIcuId: Float
  returnToTheatreId: Float
  admissionDate: DateTime
  diagnosisDate: DateTime
  preManagementDiagnosis: String
  recognisedCoMorbidities: String
  prophylaxis: String
  finalDiagnosis: String
  pathologicalDiagnoses: String
  dischargeDate: DateTime
  outcomeId: Float
  mortalityClassificationId: Float
  recurrenceDate: DateTime
  discussedAtMdm: Boolean
  comments: String
  isCompleted: Boolean!
}

"""Input for updating consult"""
input UpdateConsultInput {
  id: Float!
  name: String
  urn: String
  selectedProcedures: [ConsultProcedureInput!]
  hospitalId: Float
  rotationPeriodId: Float
  setLevelId: Float
  procedureDate: DateTime
  supervisorId: Float
  dateOfBirth: DateTime
  startTime: String
  endTime: String
  gender: String
  admissionDate: DateTime
  admissionCategoryId: Float
  ethnicityId: Float
  unplannedReadmissionId: Float
  fundingTypeId: Float
  asaGradeId: Float
  woundInfectionRiskId: Float
  typeOfAnaestheticId: Float
  unplannedIcuId: Float
  returnToTheatreId: Float
  diagnosisDate: DateTime
  preManagementDiagnosis: String
  recognisedCoMorbidities: String
  prophylaxis: String
  finalDiagnosis: String
  pathologicalDiagnoses: String
  dischargeDate: DateTime
  outcomeId: Float
  mortalityClassificationId: Float
  recurrenceDate: DateTime
  discussedAtMdm: Boolean
  comments: String
  isCompleted: Boolean
}

"""Input for deleting consult"""
input DeleteConsultInput {
  id: ID!
}

"""Input for reading consult"""
input ConsultInput {
  id: ID!
}

"""Input for OCR patient label detection"""
input ImageUploadInput {
  file: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

"""Input for creating supervisor type"""
input CreateHospitalInput {
  name: String!
  urnMask: String!
}

"""Input for updating a supervisor"""
input UpdateHospitalInput {
  id: Float!
  name: String
  urnMask: String
}

"""Input for deleting a supervisor"""
input DeleteHospitalInput {
  id: ID!
}

"""Input for viewing a supervisor"""
input HospitalInput {
  id: ID!
}

"""Input for creating procedure by an admin"""
input CreateProcedureInput {
  name: String!
  typeId: Float!
}

"""Input for updating procedure by an admin"""
input UpdateProcedureInput {
  id: Float!
  name: String
  typeId: Float
}

"""Input for deleting Procedure"""
input DeleteProcedureInput {
  id: ID!
}

"""Input for viewing Procedure"""
input ProcedureInput {
  id: ID!
}

"""Input for creating procedure type by an admin"""
input CreateProcedureTypeInput {
  name: String!
}

"""Input for updating a procedure by an admin"""
input UpdateProcedureTypeInput {
  id: Float!
  name: String
}

"""Input for deleting a procedure by an admin"""
input DeleteProcedureTypeInput {
  id: ID!
}

"""Input for viewing a procedure"""
input ProcedureTypeInput {
  id: ID!
}

"""Input for creating Rotation type"""
input CreateRotationInput {
  name: String!
  startDate: DateTime!
  endDate: DateTime!
  setLevelId: Float!
  supervisorIds: [Float!]
  hospitalId: Float!
}

"""Input for updating a Rotation"""
input UpdateRotationInput {
  id: Float!
  name: String
  startDate: DateTime
  endDate: DateTime
  setLevelId: Float
  supervisorIds: [Float!]
  hospitalId: Float
}

"""Input for deleting a Rotation"""
input DeleteRotationInput {
  id: ID!
}

"""Input for viewing a Rotation"""
input RotationInput {
  id: ID!
}

"""Input for creating consult by a user"""
input SearchInput {
  search: String!
}

"""Input for creating supervisor type"""
input CreateSupervisorInput {
  name: String!
}

"""Input for updating a supervisor"""
input UpdateSupervisorInput {
  id: Float!
  name: String
}

"""Input for deleting a supervisor"""
input DeleteSupervisorInput {
  id: ID!
}

"""Input for viewing a supervisor"""
input SupervisorInput {
  id: ID!
}

"""Input for creating user"""
input CreateUserInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

"""Input for registering user"""
input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  captchaToken: String!
}

"""Input for login credentials"""
input LoginInput {
  email: String!
  password: String!
}

"""Input for sending a password recovery email"""
input ForgotPasswordInput {
  email: String!
  captchaToken: String!
}

"""Input for Resetting password"""
input ResetPasswordInput {
  id: Float!
  newPassword: String!
  emailToken: String!
}

"""Input for updating a user by an admin"""
input UpdateUserInput {
  id: Float!
  password: String
  firstName: String
  lastName: String
  email: String
}

"""Input for updating a profile by the user"""
input UpdateProfileInput {
  password: String
  firstName: String
  lastName: String
  email: String
}

"""Input for updating a users password"""
input UpdatePasswordInput {
  currentPassword: String!
  newPassword: String!
}

"""Input for deleting a user"""
input DeleteUserInput {
  id: ID!
}

"""Input for viewing a user"""
input UserInput {
  id: ID!
}

type Query {
  allAdmissionCategories: [AdmissionCategory!]!
  allAsaGrades: [AsaGrade!]!
  allConsults: [Consult!]!
  consult(input: ConsultInput!): Consult!
  totalConsults: Float!
  allEthnicities: [Ethnicity!]!
  allFundingTypes: [FundingType!]!
  allHospitals: [Hospital!]!
  hospital(input: HospitalInput!): Hospital!
  allMortalityClassifications: [MortalityClassification!]!
  allOutcomes: [Outcome!]!
  allProcedures: [Procedure!]!
  procedure(input: ProcedureInput!): Procedure!
  allProcedureTopics: [ProcedureTopic!]!
  allProcedureTypes: [ProcedureType!]!
  allReturnToTheatres: [ReturnToTheatre!]!
  allRotations: [Rotation!]!
  rotation(input: RotationInput!): Rotation!
  currentRotation: Rotation!
  search(input: SearchInput!): [Consult!]!
  allSetLevels: [SetLevel!]!
  allSupervisionLevels: [SupervisionLevel!]!
  allSupervisors: [Supervisor!]!
  supervisor(input: SupervisorInput!): Supervisor!
  allTypeOfAnaesthetics: [TypeOfAnaesthetic!]!
  allUnplannedIcus: [UnplannedIcu!]!
  allUnplannedReadmissions: [UnplannedReadmission!]!
  allUsers: [User!]!
  user(input: UserInput!): User!
  profile: User!
  allWoundInfectionRisks: [WoundInfectionRisk!]!
}

type Mutation {
  createConsult(input: CreateConsultInput!): Consult!
  updateConsult(input: UpdateConsultInput!): Consult!
  deleteConsult(input: DeleteConsultInput!): Consult!
  imageUpload(input: ImageUploadInput!): RecognisedText!
  createHospital(input: CreateHospitalInput!): Hospital!
  updateHospital(input: UpdateHospitalInput!): Hospital!
  deleteHospital(input: DeleteHospitalInput!): Hospital!
  createProcedure(input: CreateProcedureInput!): Procedure!
  updateProcedure(input: UpdateProcedureInput!): Procedure!
  deleteProcedure(input: DeleteProcedureInput!): Procedure!
  createProcedureType(input: CreateProcedureTypeInput!): ProcedureType!
  updateProcedureType(input: UpdateProcedureTypeInput!): ProcedureType!
  deleteProcedureType(input: DeleteProcedureTypeInput!): ProcedureType!
  createRotation(input: CreateRotationInput!): Rotation!
  updateRotation(input: UpdateRotationInput!): Rotation!
  deleteRotation(input: DeleteRotationInput!): Rotation!
  createSupervisor(input: CreateSupervisorInput!): Supervisor!
  updateSupervisor(input: UpdateSupervisorInput!): Supervisor!
  deleteSupervisor(input: DeleteSupervisorInput!): Supervisor!
  login(input: LoginInput!): Token!
  forgotPassword(input: ForgotPasswordInput!): Boolean!
  resetPassword(input: ResetPasswordInput!): Boolean!
  register(input: RegisterInput!): Token!
  updateUser(input: UpdateUserInput!): User!
  updateProfile(input: UpdateProfileInput!): User!
  updatePassword(input: UpdatePasswordInput!): User!
  deleteUser(input: DeleteUserInput!): User!
}
