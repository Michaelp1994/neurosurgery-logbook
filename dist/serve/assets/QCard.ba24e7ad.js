var Q=Object.defineProperty,j=Object.defineProperties;var C=Object.getOwnPropertyDescriptors;var x=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable;var k=(e,t,s)=>t in e?Q(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,v=(e,t)=>{for(var s in t||(t={}))D.call(t,s)&&k(e,s,t[s]);if(x)for(var s of x(t))F.call(t,s)&&k(e,s,t[s]);return e},g=(e,t)=>j(e,C(t));import{J as u,K as y,N as i,R as S,a0 as l,P as $}from"./vendor.3fb54e24.js";const I={xs:18,sm:24,md:32,lg:38,xl:46},P={size:String};function _(e,t=I){return u(()=>e.size!==void 0?{fontSize:e.size in t?`${t[e.size]}px`:e.size}:null)}const B="0 0 24 24",q=e=>e,m=e=>`ionicons ${e}`,R={"icon-":q,"bt-":e=>`bt ${e}`,"eva-":e=>`eva ${e}`,"ion-md":m,"ion-ios":m,"ion-logo":m,"mdi-":e=>`mdi ${e}`,"iconfont ":q,"ti-":e=>`themify-icon ${e}`,"bi-":e=>`bootstrap-icons ${e}`},w={o_:"-outlined",r_:"-round",s_:"-sharp"},O=new RegExp("^("+Object.keys(R).join("|")+")"),A=new RegExp("^("+Object.keys(w).join("|")+")"),J=/^[Mm]\s?[-+]?\.?\d/,K=/^img:/,L=/^svguse:/,N=/^ion-/,U=/^[lf]a[srlbdk]? /,V=/^fa-(solid|regular|light|brands|duotone|thin)/;var X=y({name:"QIcon",props:g(v({},P),{tag:{type:String,default:"i"},name:String,color:String,left:Boolean,right:Boolean}),setup(e,{slots:t}){const{proxy:{$q:s}}=$(),c=_(e),d=u(()=>"q-icon"+(e.left===!0?" on-left":"")+(e.right===!0?" on-right":"")+(e.color!==void 0?` text-${e.color}`:"")),r=u(()=>{let a,n=e.name;if(n==="none"||!n)return{none:!0};if(s.iconMapFn!==null){const o=s.iconMapFn(n);if(o!==void 0)if(o.icon!==void 0){if(n=o.icon,n==="none"||!n)return{none:!0}}else return{cls:o.cls,content:o.content!==void 0?o.content:" "}}if(J.test(n)===!0){const[o,f=B]=n.split("|");return{svg:!0,viewBox:f,nodes:o.split("&&").map(E=>{const[z,p,M]=E.split("@@");return i("path",{style:p,d:z,transform:M})})}}if(K.test(n)===!0)return{img:!0,src:n.substring(4)};if(L.test(n)===!0){const[o,f=B]=n.split("|");return{svguse:!0,src:o.substring(7),viewBox:f}}let b=" ";const h=n.match(O);if(h!==null)a=R[h[1]](n);else if(U.test(n)===!0||V.test(n)===!0)a=n;else if(N.test(n)===!0)a=`ionicons ion-${s.platform.is.ios===!0?"ios":"md"}${n.substr(3)}`;else{a="notranslate material-icons";const o=n.match(A);o!==null&&(n=n.substring(2),a+=w[o[1]]),b=n}return{cls:a,content:b}});return()=>{const a={class:d.value,style:c.value,"aria-hidden":"true",role:"presentation"};return r.value.none===!0?i(e.tag,a,S(t.default)):r.value.img===!0?i("span",a,l(t.default,[i("img",{src:r.value.src})])):r.value.svg===!0?i("span",a,l(t.default,[i("svg",{viewBox:r.value.viewBox},r.value.nodes)])):r.value.svguse===!0?i("span",a,l(t.default,[i("svg",{viewBox:r.value.viewBox},[i("use",{"xlink:href":r.value.src})])])):(r.value.cls!==void 0&&(a.class+=" "+r.value.cls),i(e.tag,a,l(t.default,[r.value.content])))}}});const G={dark:{type:Boolean,default:null}};function H(e,t){return u(()=>e.dark===null?t.dark.isActive:e.dark)}var Y=y({name:"QCard",props:g(v({},G),{tag:{type:String,default:"div"},square:Boolean,flat:Boolean,bordered:Boolean}),setup(e,{slots:t}){const s=$(),c=H(e,s.proxy.$q),d=u(()=>"q-card"+(c.value===!0?" q-card--dark q-dark":"")+(e.bordered===!0?" q-card--bordered":"")+(e.square===!0?" q-card--square no-border-radius":"")+(e.flat===!0?" q-card--flat no-shadow":""));return()=>i(e.tag,{class:d.value},S(t.default))}});export{Y as Q,P as a,_ as b,X as c,G as d,H as e,I as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
