import{a as g,Q as C}from"./QItemLabel.7ecff6cd.js";import{a as y,Q as I}from"./QItemSection.dc8b2532.js";import{Q as T}from"./use-key-composition.9a07a52d.js";import{Q as k}from"./QList.dc10b5ea.js";import{Q as V}from"./QSelect.895e741b.js";import{y as L,z as R,A as B,B as S,C as F,D as E,E as D,F as O,G,H as M,I as N,J as w,K as x}from"./index.c67102f5.js";import{t as r,o as s,c as m,z as p,J as z,w as f,a as c,A,B as H,F as U,D as Q,E as b,C as J}from"./vendor.3fb54e24.js";import{g as W}from"./rotation.2b9e0722.js";function h(){return L()}const j=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=R();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allSupervisionLevels,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),q=Q("Selected Procedures:"),te=r({props:{modelValue:null,readonly:{type:Boolean}},emits:["update:modelValue","deleteProcedure"],setup(o,{emit:d}){const t=o,{data:i,error:n,fetching:a}=h(),e=z(()=>!t.modelValue||!t.modelValue.length||!i.value?[]:t.modelValue.map(l=>{var u;return(u=i.value)==null?void 0:u.allProcedures.find(v=>v.id===l.procedureId)}));return(l,u)=>(s(),m(k,{bordered:"",seperator:""},{default:f(()=>[c(g,{header:""},{default:f(()=>[q]),_:1}),(s(!0),A(U,null,H(p(e),(v,$)=>(s(),A(U,{key:v.id},[c(I,null,{default:f(()=>[c(y,null,{default:f(()=>[c(g,null,{default:f(()=>[Q(b(v==null?void 0:v.name),1)]),_:2},1024),c(g,{caption:""},{default:f(()=>[Q(" Type: "+b(v==null?void 0:v.type.name),1)]),_:2},1024)]),_:2},1024),c(y,null,{default:f(()=>[c(j,{modelValue:o.modelValue[$].supervisionLevelId,"onUpdate:modelValue":_=>o.modelValue[$].supervisionLevelId=_},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024),o.readonly?J("",!0):(s(),m(y,{key:0,side:""},{default:f(()=>[c(T,{icon:"delete",rounded:"",color:"red",flat:"",class:"q-pa-sm",onClick:_=>d("deleteProcedure",$)},null,8,["onClick"])]),_:2},1024))]),_:2},1024),c(C)],64))),128))]),_:1}))}}),ae=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=B();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",placeholder:"Admission Category",options:(l=p(t))==null?void 0:l.allAdmissionCategories,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),ue=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=S();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allAsaGrades,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),ne=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=F();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allEthnicities,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),ie=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=E();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allFundingTypes,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),se=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const t=["Male","Female"];return(i,n)=>(s(),m(V,{"model-value":o.modelValue,outlined:"",options:t,"onUpdate:modelValue":n[0]||(n[0]=a=>i.$emit("update:modelValue",a))},null,8,["model-value"]))}}),me=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=D();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allMortalityClassifications,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),de=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=O();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allOutcomes,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),pe=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=h(),a=e=>`${e.name} (${e.type.name})`;return(e,l)=>{var u;return s(),m(V,{"model-value":o.modelValue,outlined:"","option-value":"id","option-label":a,loading:p(n),"emit-value":"","map-options":"",placeholder:"Hospitals",options:(u=p(t))==null?void 0:u.allProcedures,"onUpdate:modelValue":l[0]||(l[0]=v=>e.$emit("update:modelValue",v))},null,8,["model-value","loading","options"])}}}),re=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const t=["Antibiotics","DVT Prevention"];return(i,n)=>(s(),m(V,{"model-value":o.modelValue,outlined:"",options:t,"onUpdate:modelValue":n[0]||(n[0]=a=>i.$emit("update:modelValue",a))},null,8,["model-value"]))}}),Ve=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=G();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allReturnToTheatres,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),ve=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=M();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allTypeOfAnaesthetics,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),ce=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=N();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allUnplannedIcus,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),fe=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=w();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allUnplannedReadmissions,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),$e=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=x();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,outlined:"","emit-value":"","map-options":"","option-value":"id","option-label":"name",options:(l=p(t))==null?void 0:l.allWoundInfectionRisks,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","options"])}}}),ge=r({props:["modelValue"],emits:["update:modelValue"],setup(o,{emit:d}){const{data:t,error:i,fetching:n}=W();return(a,e)=>{var l;return s(),m(V,{"model-value":o.modelValue,loading:p(n),outlined:"","option-value":"id","option-label":"name","emit-value":"","map-options":"",options:(l=p(t))==null?void 0:l.allRotations,"onUpdate:modelValue":e[0]||(e[0]=u=>a.$emit("update:modelValue",u))},null,8,["model-value","loading","options"])}}});export{ge as _,ie as a,ue as b,ce as c,$e as d,Ve as e,ve as f,se as g,re as h,de as i,ne as j,me as k,ae as l,fe as m,pe as n,te as o};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
