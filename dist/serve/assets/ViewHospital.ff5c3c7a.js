import{Q as h}from"./use-key-composition.9a07a52d.js";import{Q}from"./QSpace.990ed13a.js";import{Q as v}from"./QInput.c5c599b2.js";import{Q as w}from"./QCardSection.ad5c7ff8.js";import{Q as y}from"./QCard.ba24e7ad.js";import{Q as k}from"./QPage.ad8f831d.js";import{a as x}from"./hospital.c896e4ea.js";import{t as q,ag as C,x as N,G as H,o as l,c as I,w as m,y as o,a as e,z as a,A as c,C as u,D as V,E as S,F as _,aF as B,aG as b}from"./vendor.3fb54e24.js";import{_ as E}from"./index.c67102f5.js";const F=s=>(B("data-v-73540769"),s=s(),b(),s),M={class:"row q-px-sm q-pb-sm items-center"},R=F(()=>o("div",{class:"text-h6 q-ml-lg"},"View Hospital",-1)),U=V(" Loading... "),D={class:"row q-pa-sm"},G={class:"col-12 col-md-4"},z={class:"row q-pa-sm"},A={class:"col-12 col-md-4"},L=q({setup(s){const i=C();if(typeof i.params.id!="string")throw Error;const d=N(parseInt(i.params.id)),{data:t,fetching:g,error:f}=x(d);return H(()=>i.params.id,p=>{typeof p=="string"&&(d.value=parseInt(p))}),(p,r)=>(l(),I(k,{padding:""},{default:m(()=>[o("div",M,[e(h,{icon:"arrow_back",to:{name:"hospitals"},rounded:"",flat:"",class:"q-pa-sm"}),R,e(Q),e(h,{icon:"edit",to:{name:"updateHospital",params:{id:d.value}},rounded:"",class:"q-pa-sm",flat:""},null,8,["to"])]),e(y,null,{default:m(()=>[e(w,null,{default:m(()=>[a(g)?(l(),c(_,{key:0},[U],64)):u("",!0),a(f)?(l(),c(_,{key:1},[V(" Error... "+S(a(f)),1)],64)):u("",!0),a(t)?(l(),c(_,{key:2},[o("div",D,[o("div",G,[e(v,{modelValue:a(t).hospital.name,"onUpdate:modelValue":r[0]||(r[0]=n=>a(t).hospital.name=n),label:"Hospital Name",readonly:"",outlined:""},null,8,["modelValue"])])]),o("div",z,[o("div",A,[e(v,{modelValue:a(t).hospital.urnMask,"onUpdate:modelValue":r[1]||(r[1]=n=>a(t).hospital.urnMask=n),label:"URN/CRN Mask",readonly:"",outlined:""},null,8,["modelValue"])])])],64)):u("",!0)]),_:1})]),_:1})]),_:1}))}});var Z=E(L,[["__scopeId","data-v-73540769"]]);export{Z as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmlld0hvc3BpdGFsLmZmNWMzYzdhLmpzIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcGFnZXMvdXNlci9WaWV3SG9zcGl0YWwudnVlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgc2V0dXAgbGFuZz1cInRzXCI+XG4gIGltcG9ydCB7IGdldEhvc3BpdGFsIH0gZnJvbSBcIkAvbW9kZWxzL2hvc3BpdGFsXCI7XG4gIGltcG9ydCB7IHJlZiwgd2F0Y2ggfSBmcm9tIFwidnVlXCI7XG4gIGltcG9ydCB7IHVzZVJvdXRlIH0gZnJvbSBcInZ1ZS1yb3V0ZXJcIjtcbiAgY29uc3Qgcm91dGUgPSB1c2VSb3V0ZSgpO1xuICBpZiAodHlwZW9mIHJvdXRlLnBhcmFtcy5pZCAhPT0gXCJzdHJpbmdcIikgdGhyb3cgRXJyb3I7XG4gIGNvbnN0IGlkID0gcmVmKHBhcnNlSW50KHJvdXRlLnBhcmFtcy5pZCkpO1xuICBjb25zdCB7IGRhdGEsIGZldGNoaW5nLCBlcnJvciB9ID0gZ2V0SG9zcGl0YWwoaWQpO1xuICB3YXRjaChcbiAgICAoKSA9PiByb3V0ZS5wYXJhbXMuaWQsXG4gICAgKG5ld0lkKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIG5ld0lkID09PSBcInN0cmluZ1wiKSBpZC52YWx1ZSA9IHBhcnNlSW50KG5ld0lkKTtcbiAgICB9XG4gICk7XG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8cS1wYWdlIHBhZGRpbmc+XG4gICAgPGRpdiBjbGFzcz1cInJvdyBxLXB4LXNtIHEtcGItc20gaXRlbXMtY2VudGVyXCI+XG4gICAgICA8cS1idG5cbiAgICAgICAgaWNvbj1cImFycm93X2JhY2tcIlxuICAgICAgICA6dG89XCJ7IG5hbWU6ICdob3NwaXRhbHMnIH1cIlxuICAgICAgICByb3VuZGVkXG4gICAgICAgIGZsYXRcbiAgICAgICAgY2xhc3M9XCJxLXBhLXNtXCJcbiAgICAgIC8+XG4gICAgICA8ZGl2IGNsYXNzPVwidGV4dC1oNiBxLW1sLWxnXCI+VmlldyBIb3NwaXRhbDwvZGl2PlxuICAgICAgPHEtc3BhY2UgLz5cbiAgICAgIDxxLWJ0blxuICAgICAgICBpY29uPVwiZWRpdFwiXG4gICAgICAgIDp0bz1cInsgbmFtZTogJ3VwZGF0ZUhvc3BpdGFsJywgcGFyYW1zOiB7IGlkIH0gfVwiXG4gICAgICAgIHJvdW5kZWRcbiAgICAgICAgY2xhc3M9XCJxLXBhLXNtXCJcbiAgICAgICAgZmxhdFxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgICA8cS1jYXJkPlxuICAgICAgPHEtY2FyZC1zZWN0aW9uPlxuICAgICAgICA8dGVtcGxhdGUgdi1pZj1cImZldGNoaW5nXCI+IExvYWRpbmcuLi4gPC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJlcnJvclwiPiBFcnJvci4uLiB7eyBlcnJvciB9fSA8L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgdi1pZj1cImRhdGFcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93IHEtcGEtc21cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTIgY29sLW1kLTRcIj5cbiAgICAgICAgICAgICAgPHEtaW5wdXRcbiAgICAgICAgICAgICAgICB2LW1vZGVsPVwiZGF0YS5ob3NwaXRhbC5uYW1lXCJcbiAgICAgICAgICAgICAgICBsYWJlbD1cIkhvc3BpdGFsIE5hbWVcIlxuICAgICAgICAgICAgICAgIHJlYWRvbmx5XG4gICAgICAgICAgICAgICAgb3V0bGluZWRcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3cgcS1wYS1zbVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC0xMiBjb2wtbWQtNFwiPlxuICAgICAgICAgICAgICA8cS1pbnB1dFxuICAgICAgICAgICAgICAgIHYtbW9kZWw9XCJkYXRhLmhvc3BpdGFsLnVybk1hc2tcIlxuICAgICAgICAgICAgICAgIGxhYmVsPVwiVVJOL0NSTiBNYXNrXCJcbiAgICAgICAgICAgICAgICByZWFkb25seVxuICAgICAgICAgICAgICAgIG91dGxpbmVkXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgIDwvcS1jYXJkLXNlY3Rpb24+XG4gICAgPC9xLWNhcmQ+XG4gIDwvcS1wYWdlPlxuPC90ZW1wbGF0ZT5cblxuPHN0eWxlIHNjb3BlZD5cbiAgLnNlbGYtY2VudGVyIHtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIH1cbjwvc3R5bGU+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6InF4QkFJRSxLQUFNLEdBQVEsSUFDVixHQUFBLE1BQU8sR0FBTSxPQUFPLElBQU8sU0FBZ0IsS0FBQSxPQUMvQyxLQUFNLEdBQUssRUFBSSxTQUFTLEVBQU0sT0FBTyxFQUFFLENBQUMsRUFDbEMsQ0FBRSxPQUFNLFdBQVUsU0FBVSxFQUFZLENBQUUsRUFDaEQsU0FDRSxJQUFNLEVBQU0sT0FBTyxHQUNuQixBQUFDLEdBQVUsQ0FDVCxBQUFJLE1BQU8sSUFBVSxVQUFhLEdBQUEsTUFBUSxTQUFTLENBQUssRUFBQSxDQUU1RCJ9
