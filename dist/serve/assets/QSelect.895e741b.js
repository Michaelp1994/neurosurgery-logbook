var Nt=Object.defineProperty,Kt=Object.defineProperties;var jt=Object.getOwnPropertyDescriptors;var dt=Object.getOwnPropertySymbols;var Qt=Object.prototype.hasOwnProperty,Ut=Object.prototype.propertyIsEnumerable;var ft=(e,a,u)=>a in e?Nt(e,a,{enumerable:!0,configurable:!0,writable:!0,value:u}):e[a]=u,I=(e,a)=>{for(var u in a||(a={}))Qt.call(a,u)&&ft(e,u,a[u]);if(dt)for(var u of dt(a))Ut.call(a,u)&&ft(e,u,a[u]);return e},K=(e,a)=>Kt(e,jt(a));import{u as Xe,b as kt,e as xt,d as Vt,R as Wt,g as Xt,a as Yt,c as Gt,f as vt,h as Jt,p as mt}from"./use-key-composition.9a07a52d.js";import{ak as qt,P as Pe,x as A,J as f,G as oe,H as ue,N as b,a6 as Zt,aH as el,a9 as tl,aa as ll,L as Ye,K as De,aq as nl,a5 as ul,a3 as me,a1 as St,R as ol,az as il,aM as Ee,a8 as al,aN as rl,$ as Ue,O as Ve,W as sl,I as cl,a0 as dl}from"./vendor.3fb54e24.js";import{d as fl,a as vl,e as ml,b as Sl,c as Re}from"./QCard.ba24e7ad.js";import{a as gl,Q as hl}from"./QItemSection.dc8b2532.js";import{a as yl}from"./QItemLabel.7ecff6cd.js";import{a as bl,u as wl,b as Cl,d as kl,r as gt,e as ht,f as xl,g as Vl,Q as ql}from"./QMenu.bdb281bc.js";import{u as _l,a as zl}from"./use-prevent-scroll.44e6db56.js";import{u as Il,a as Bl,b as El}from"./use-model-toggle.a87aeb12.js";let Le=!1;{const e=document.createElement("div"),a=document.createElement("div");e.setAttribute("dir","rtl"),e.style.width="1px",e.style.height="1px",e.style.overflow="auto",a.style.width="1000px",a.style.height="1px",document.body.appendChild(e),e.appendChild(a),e.scrollLeft=-1e3,Le=e.scrollLeft>=0,e.remove()}const J=1e3,pl=["start","center","end","start-force","center-force","end-force"];let Ml=1;const Al=Array.prototype.filter,yt=window.getComputedStyle(document.body).overflowAnchor===void 0?qt:function(e,a){const u=e+"_ss";let g=document.getElementById(u);g===null&&(g=document.createElement("style"),g.type="text/css",g.id=u,document.head.appendChild(g)),g.qChildIndex!==a&&(g.qChildIndex=a,g.innerHTML=`#${e} > *:nth-child(${a}) { overflow-anchor: auto }`)};function qe(e,a){return e+a}function We(e,a,u,g,H,o,z,x){const h=e===window?document.scrollingElement||document.documentElement:e,M=H===!0?"offsetWidth":"offsetHeight",c={scrollStart:0,scrollViewSize:-z-x,scrollMaxSize:0,offsetStart:-z,offsetEnd:-x};if(H===!0?(e===window?(c.scrollStart=window.pageXOffset||window.scrollX||document.body.scrollLeft||0,c.scrollViewSize+=document.documentElement.clientWidth):(c.scrollStart=h.scrollLeft,c.scrollViewSize+=h.clientWidth),c.scrollMaxSize=h.scrollWidth,o===!0&&(c.scrollStart=(Le===!0?c.scrollMaxSize-c.scrollViewSize:0)-c.scrollStart)):(e===window?(c.scrollStart=window.pageYOffset||window.scrollY||document.body.scrollTop||0,c.scrollViewSize+=document.documentElement.clientHeight):(c.scrollStart=h.scrollTop,c.scrollViewSize+=h.clientHeight),c.scrollMaxSize=h.scrollHeight),u!==null)for(let q=u.previousElementSibling;q!==null;q=q.previousElementSibling)q.classList.contains("q-virtual-scroll--skip")===!1&&(c.offsetStart+=q[M]);if(g!==null)for(let q=g.nextElementSibling;q!==null;q=q.nextElementSibling)q.classList.contains("q-virtual-scroll--skip")===!1&&(c.offsetEnd+=q[M]);if(a!==e){const q=h.getBoundingClientRect(),B=a.getBoundingClientRect();H===!0?(c.offsetStart+=B.left-q.left,c.offsetEnd-=B.width):(c.offsetStart+=B.top-q.top,c.offsetEnd-=B.height),e!==window&&(c.offsetStart+=c.scrollStart),c.offsetEnd+=c.scrollMaxSize-c.offsetStart}return c}function bt(e,a,u,g){a==="end"&&(a=(e===window?document.body:e)[u===!0?"scrollWidth":"scrollHeight"]),e===window?u===!0?(g===!0&&(a=(Le===!0?document.body.scrollWidth-document.documentElement.clientWidth:0)-a),window.scrollTo(a,window.pageYOffset||window.scrollY||document.body.scrollTop||0)):window.scrollTo(window.pageXOffset||window.scrollX||document.body.scrollLeft||0,a):u===!0?(g===!0&&(a=(Le===!0?e.scrollWidth-e.offsetWidth:0)-a),e.scrollLeft=a):e.scrollTop=a}function pe(e,a,u,g){if(u>=g)return 0;const H=a.length,o=Math.floor(u/J),z=Math.floor((g-1)/J)+1;let x=e.slice(o,z).reduce(qe,0);return u%J!==0&&(x-=a.slice(o*J,u).reduce(qe,0)),g%J!==0&&g!==H&&(x-=a.slice(g,z*J).reduce(qe,0)),x}const _t={virtualScrollSliceSize:{type:[Number,String],default:null},virtualScrollSliceRatioBefore:{type:[Number,String],default:1},virtualScrollSliceRatioAfter:{type:[Number,String],default:1},virtualScrollItemSize:{type:[Number,String],default:24},virtualScrollStickySizeStart:{type:[Number,String],default:0},virtualScrollStickySizeEnd:{type:[Number,String],default:0},tableColspan:[Number,String]},Jl=Object.keys(_t),Fl=I({virtualScrollHorizontal:Boolean,onVirtualScroll:Function},_t);function Tl({virtualScrollLength:e,getVirtualScrollTarget:a,getVirtualScrollEl:u,virtualScrollItemSizeComputed:g}){const H=Pe(),{props:o,emit:z,proxy:x}=H,{$q:h}=x;let M,c,q,B=[],w;const N="qvs_"+Ml++,F=A(0),V=A(0),j=A({}),R=A(null),W=A(null),ee=A(null),C=A({from:0,to:0}),X=f(()=>o.tableColspan!==void 0?o.tableColspan:100);g===void 0&&(g=f(()=>o.virtualScrollItemSize));const Y=f(()=>g.value+";"+o.virtualScrollHorizontal),Se=f(()=>Y.value+";"+o.virtualScrollSliceRatioBefore+";"+o.virtualScrollSliceRatioAfter);oe(Se,()=>{G()}),oe(Y,ie);function ie(){ce(c,!0)}function se(l){ce(l===void 0?c:l)}function D(l,d){const v=a();if(v==null||v.nodeType===8)return;const E=We(v,u(),R.value,W.value,o.virtualScrollHorizontal,h.lang.rtl,o.virtualScrollStickySizeStart,o.virtualScrollStickySizeEnd);q!==E.scrollViewSize&&G(E.scrollViewSize),ae(v,E,Math.min(e.value-1,Math.max(0,parseInt(l,10)||0)),0,pl.indexOf(d)>-1?d:c>-1&&l>c?"end":"start")}function _e(){const l=a();if(l==null||l.nodeType===8)return;const d=We(l,u(),R.value,W.value,o.virtualScrollHorizontal,h.lang.rtl,o.virtualScrollStickySizeStart,o.virtualScrollStickySizeEnd),v=e.value-1,E=d.scrollMaxSize-d.offsetStart-d.offsetEnd-V.value;if(M===d.scrollStart)return;if(d.scrollMaxSize<=0){ae(l,d,0,0);return}q!==d.scrollViewSize&&G(d.scrollViewSize),te(C.value.from);const O=Math.floor(d.scrollMaxSize-Math.max(d.scrollViewSize,d.offsetEnd)-Math.min(w[v],d.scrollViewSize/2));if(O>0&&Math.ceil(d.scrollStart)>=O){ae(l,d,v,d.scrollMaxSize-d.offsetEnd-B.reduce(qe,0));return}let k=0,S=d.scrollStart-d.offsetStart,s=S;if(S<=E&&S+d.scrollViewSize>=F.value)S-=F.value,k=C.value.from,s=S;else for(let y=0;S>=B[y]&&k<v;y++)S-=B[y],k+=J;for(;S>0&&k<v;)S-=w[k],S>-d.scrollViewSize?(k++,s=S):s=w[k]+S;ae(l,d,k,s)}function ae(l,d,v,E,O){const k=typeof O=="string"&&O.indexOf("-force")>-1,S=k===!0?O.replace("-force",""):O,s=S!==void 0?S:"start";let y=Math.max(0,v-j.value[s]),P=y+j.value.total;P>e.value&&(P=e.value,y=Math.max(0,P-j.value.total)),M=d.scrollStart;const Z=y!==C.value.from||P!==C.value.to;if(Z===!1&&S===void 0){de(v);return}const{activeElement:le}=document,ne=ee.value;Z===!0&&ne!==null&&ne!==le&&ne.contains(le)===!0&&(ne.addEventListener("focusout",re),setTimeout(()=>{ne!==void 0&&ne.removeEventListener("focusout",re)})),yt(N,v-y+1);const Me=S!==void 0?w.slice(y,v).reduce(qe,0):0;if(Z===!0){const ge=P>=C.value.from&&y<=C.value.to?C.value.to:P;C.value={from:y,to:ge},F.value=pe(B,w,0,y),V.value=pe(B,w,P,e.value),requestAnimationFrame(()=>{C.value.to!==P&&M===d.scrollStart&&(C.value={from:C.value.from,to:P},V.value=pe(B,w,P,e.value))})}requestAnimationFrame(()=>{if(M!==d.scrollStart)return;Z===!0&&te(y);const ge=w.slice(y,v).reduce(qe,0),he=ge+d.offsetStart+F.value,Ae=he+w[v];let Ie=he+E;if(S!==void 0){const U=ge-Me,L=d.scrollStart+U;Ie=k!==!0&&L<he&&Ae<L+d.scrollViewSize?L:S==="end"?Ae-d.scrollViewSize:he-(S==="start"?0:Math.round((d.scrollViewSize-w[v])/2))}M=Ie,bt(l,Ie,o.virtualScrollHorizontal,h.lang.rtl),de(v)})}function te(l){const d=ee.value;if(d){const v=Al.call(d.children,y=>y.classList&&y.classList.contains("q-virtual-scroll--skip")===!1),E=v.length,O=o.virtualScrollHorizontal===!0?y=>y.getBoundingClientRect().width:y=>y.offsetHeight;let k=l,S,s;for(let y=0;y<E;){for(S=O(v[y]),y++;y<E&&v[y].classList.contains("q-virtual-scroll--with-prev")===!0;)S+=O(v[y]),y++;s=S-w[k],s!==0&&(w[k]+=s,B[Math.floor(k/J)]+=s),k++}}}function re(){ee.value!==void 0&&ee.value.focus()}function ce(l,d){const v=1*g.value;(d===!0||Array.isArray(w)===!1)&&(w=[]);const E=w.length;w.length=e.value;for(let k=e.value-1;k>=E;k--)w[k]=v;const O=Math.floor((e.value-1)/J);B=[];for(let k=0;k<=O;k++){let S=0;const s=Math.min((k+1)*J,e.value);for(let y=k*J;y<s;y++)S+=w[y];B.push(S)}c=-1,M=void 0,F.value=pe(B,w,0,C.value.from),V.value=pe(B,w,C.value.to,e.value),l>=0?(te(C.value.from),ue(()=>{D(l)})):Q()}function G(l){if(l===void 0&&typeof window!="undefined"){const S=a();S!=null&&S.nodeType!==8&&(l=We(S,u(),R.value,W.value,o.virtualScrollHorizontal,h.lang.rtl,o.virtualScrollStickySizeStart,o.virtualScrollStickySizeEnd).scrollViewSize)}q=l;const d=parseFloat(o.virtualScrollSliceRatioBefore)||0,v=parseFloat(o.virtualScrollSliceRatioAfter)||0,E=1+d+v,O=l===void 0||l<=0?1:Math.ceil(l/g.value),k=Math.max(1,O,Math.ceil((o.virtualScrollSliceSize>0?o.virtualScrollSliceSize:10)/E));j.value={total:Math.ceil(k*E),start:Math.ceil(k*d),center:Math.ceil(k*(.5+d)),end:Math.ceil(k*(1+d)),view:O}}function ze(l,d){const v=o.virtualScrollHorizontal===!0?"width":"height",E={["--q-virtual-scroll-item-"+v]:g.value+"px"};return[l==="tbody"?b(l,{class:"q-virtual-scroll__padding",key:"before",ref:R},[b("tr",[b("td",{style:I({[v]:`${F.value}px`},E),colspan:X.value})])]):b(l,{class:"q-virtual-scroll__padding",key:"before",ref:R,style:I({[v]:`${F.value}px`},E)}),b(l,{class:"q-virtual-scroll__content",key:"content",ref:ee,id:N,tabindex:-1},d.flat()),l==="tbody"?b(l,{class:"q-virtual-scroll__padding",key:"after",ref:W},[b("tr",[b("td",{style:I({[v]:`${V.value}px`},E),colspan:X.value})])]):b(l,{class:"q-virtual-scroll__padding",key:"after",ref:W,style:I({[v]:`${V.value}px`},E)})]}function de(l){c!==l&&(o.onVirtualScroll!==void 0&&z("virtual-scroll",{index:l,from:C.value.from,to:C.value.to-1,direction:l<c?"decrease":"increase",ref:x}),c=l)}G();const Q=Zt(_e,h.platform.is.ios===!0?120:35);el(()=>{G()});let i=!1;return tl(()=>{i=!0}),ll(()=>{if(i!==!0)return;const l=a();M!==void 0&&l!==void 0&&l!==null&&l.nodeType!==8?bt(l,M,o.virtualScrollHorizontal,h.lang.rtl):D(c)}),yt!==qt&&Ye(()=>{const l=document.getElementById(N+"_ss");l!==null&&l.remove(),Q.cancel()}),Object.assign(x,{scrollTo:D,reset:ie,refresh:se}),{virtualScrollSliceRange:C,virtualScrollSliceSizeComputed:j,setVirtualScrollSize:G,onVirtualScrollEvt:Q,localResetVirtualScroll:ce,padVirtualScroll:ze,scrollTo:D,reset:ie,refresh:se}}var Hl=De({name:"QField",inheritAttrs:!1,props:Xe,emits:kt,setup(){return xt(Vt())}});const Ol={xs:8,sm:10,md:14,lg:20,xl:24};var Rl=De({name:"QChip",props:K(I(I({},fl),vl),{dense:Boolean,icon:String,iconRight:String,iconRemove:String,iconSelected:String,label:[String,Number],color:String,textColor:String,modelValue:{type:Boolean,default:!0},selected:{type:Boolean,default:null},square:Boolean,outline:Boolean,clickable:Boolean,removable:Boolean,tabindex:[String,Number],disable:Boolean,ripple:{type:[Boolean,Object],default:!0}}),emits:["update:modelValue","update:selected","remove","click"],setup(e,{slots:a,emit:u}){const{proxy:{$q:g}}=Pe(),H=ml(e,g),o=Sl(e,Ol),z=f(()=>e.selected===!0||e.icon!==void 0),x=f(()=>e.selected===!0?e.iconSelected||g.iconSet.chip.selected:e.icon),h=f(()=>e.iconRemove||g.iconSet.chip.remove),M=f(()=>e.disable===!1&&(e.clickable===!0||e.selected!==null)),c=f(()=>{const V=e.outline===!0&&e.color||e.textColor;return"q-chip row inline no-wrap items-center"+(e.outline===!1&&e.color!==void 0?` bg-${e.color}`:"")+(V?` text-${V} q-chip--colored`:"")+(e.disable===!0?" disabled":"")+(e.dense===!0?" q-chip--dense":"")+(e.outline===!0?" q-chip--outline":"")+(e.selected===!0?" q-chip--selected":"")+(M.value===!0?" q-chip--clickable cursor-pointer non-selectable q-hoverable":"")+(e.square===!0?" q-chip--square":"")+(H.value===!0?" q-chip--dark q-dark":"")}),q=f(()=>e.disable===!0?{tabindex:-1,"aria-disabled":"true"}:{tabindex:e.tabindex||0});function B(V){V.keyCode===13&&w(V)}function w(V){e.disable||(u("update:selected",!e.selected),u("click",V))}function N(V){(V.keyCode===void 0||V.keyCode===13)&&(me(V),e.disable===!1&&(u("update:modelValue",!1),u("remove")))}function F(){const V=[];M.value===!0&&V.push(b("div",{class:"q-focus-helper"})),z.value===!0&&V.push(b(Re,{class:"q-chip__icon q-chip__icon--left",name:x.value}));const j=e.label!==void 0?[b("div",{class:"ellipsis"},[e.label])]:void 0;return V.push(b("div",{class:"q-chip__content col row no-wrap items-center q-anchor--skip"},ul(a.default,j))),e.iconRight&&V.push(b(Re,{class:"q-chip__icon q-chip__icon--right",name:e.iconRight})),e.removable===!0&&V.push(b(Re,K(I({class:"q-chip__icon q-chip__icon--remove cursor-pointer",name:h.value},q.value),{onClick:N,onKeyup:N}))),V}return()=>{if(e.modelValue===!1)return;const V={class:c.value,style:o.value};return M.value===!0&&Object.assign(V,q.value,{onClick:w,onKeyup:B}),nl("div",V,F(),"ripple",e.ripple!==!1&&e.disable!==!0,()=>[[Wt,e.ripple]])}}});let Oe=0;const Ll={standard:"fixed-full flex-center",top:"fixed-top justify-center",bottom:"fixed-bottom justify-center",right:"fixed-right items-center",left:"fixed-left items-center"},wt={standard:["scale","scale"],top:["slide-down","slide-up"],bottom:["slide-up","slide-down"],right:["slide-left","slide-right"],left:["slide-right","slide-left"]};var Pl=De({name:"QDialog",inheritAttrs:!1,props:K(I(I({},Il),bl),{transitionShow:String,transitionHide:String,persistent:Boolean,autoClose:Boolean,noEscDismiss:Boolean,noBackdropDismiss:Boolean,noRouteDismiss:Boolean,noRefocus:Boolean,noFocus:Boolean,noShake:Boolean,seamless:Boolean,maximized:Boolean,fullWidth:Boolean,fullHeight:Boolean,square:Boolean,position:{type:String,default:"standard",validator:e=>e==="standard"||["top","bottom","left","right"].includes(e)}}),emits:[...Bl,"shake","click","escape-key"],setup(e,{slots:a,emit:u,attrs:g}){const H=Pe(),o=A(null),z=A(!1),x=A(!1),h=A(!1);let M,c=null,q,B;const w=f(()=>e.persistent!==!0&&e.noRouteDismiss!==!0&&e.seamless!==!0),{preventBodyScroll:N}=zl(),{registerTimeout:F,removeTimeout:V}=wl(),{registerTick:j,removeTick:R}=Cl(),{showPortal:W,hidePortal:ee,portalIsActive:C,renderPortal:X}=kl(H,o,S,!0),{hide:Y}=El({showing:z,hideOnRouteChange:w,handleShow:ze,handleHide:de,processOnMount:!0}),{addToHistory:Se,removeFromHistory:ie}=_l(z,Y,w),se=f(()=>`q-dialog__inner flex no-pointer-events q-dialog__inner--${e.maximized===!0?"maximized":"minimized"} q-dialog__inner--${e.position} ${Ll[e.position]}`+(h.value===!0?" q-dialog__inner--animating":"")+(e.fullWidth===!0?" q-dialog__inner--fullwidth":"")+(e.fullHeight===!0?" q-dialog__inner--fullheight":"")+(e.square===!0?" q-dialog__inner--square":"")),D=f(()=>"q-transition--"+(e.transitionShow===void 0?wt[e.position][0]:e.transitionShow)),_e=f(()=>"q-transition--"+(e.transitionHide===void 0?wt[e.position][1]:e.transitionHide)),ae=f(()=>x.value===!0?_e.value:D.value),te=f(()=>`--q-transition-duration: ${e.transitionDuration}ms`),re=f(()=>z.value===!0&&e.seamless!==!0),ce=f(()=>e.autoClose===!0?{onClick:E}:{}),G=f(()=>[`q-dialog fullscreen no-pointer-events q-dialog--${re.value===!0?"modal":"seamless"}`,g.class]);oe(z,s=>{ue(()=>{x.value=s})}),oe(()=>e.maximized,s=>{z.value===!0&&v(s)}),oe(re,s=>{N(s),s===!0?(xl(k),Vl(l)):(gt(k),ht(l))});function ze(s){V(),R(),Se(),c=e.noRefocus===!1&&document.activeElement!==null?document.activeElement:null,v(e.maximized),W(),h.value=!0,e.noFocus!==!0&&(document.activeElement!==null&&document.activeElement.blur(),j(Q)),F(()=>{if(H.proxy.$q.platform.is.ios===!0){if(e.seamless!==!0&&document.activeElement){const{top:y,bottom:P}=document.activeElement.getBoundingClientRect(),{innerHeight:Z}=window,le=window.visualViewport!==void 0?window.visualViewport.height:Z;y>0&&P>le/2&&(document.scrollingElement.scrollTop=Math.min(document.scrollingElement.scrollHeight-le,P>=Z?1/0:Math.ceil(document.scrollingElement.scrollTop+P-le/2))),document.activeElement.scrollIntoView()}B=!0,o.value.click(),B=!1}W(!0),h.value=!1,u("show",s)},e.transitionDuration)}function de(s){V(),R(),ie(),d(!0),h.value=!0,c!==null&&(c.focus(),c=null),F(()=>{ee(),h.value=!1,u("hide",s)},e.transitionDuration)}function Q(){Xt(()=>{let s=o.value;s===null||s.contains(document.activeElement)===!0||(s=s.querySelector("[autofocus], [data-autofocus]")||s,s.focus({preventScroll:!0}))})}function i(){Q(),u("shake");const s=o.value;s!==null&&(s.classList.remove("q-animate--scale"),s.classList.add("q-animate--scale"),clearTimeout(M),M=setTimeout(()=>{o.value!==null&&(s.classList.remove("q-animate--scale"),Q())},170))}function l(){e.seamless!==!0&&(e.persistent===!0||e.noEscDismiss===!0?e.maximized!==!0&&e.noShake!==!0&&i():(u("escape-key"),Y()))}function d(s){clearTimeout(M),(s===!0||z.value===!0)&&(v(!1),e.seamless!==!0&&(N(!1),gt(k),ht(l))),s!==!0&&(c=null)}function v(s){s===!0?q!==!0&&(Oe<1&&document.body.classList.add("q-body--dialog"),Oe++,q=!0):q===!0&&(Oe<2&&document.body.classList.remove("q-body--dialog"),Oe--,q=!1)}function E(s){B!==!0&&(Y(s),u("click",s))}function O(s){e.persistent!==!0&&e.noBackdropDismiss!==!0?Y(s):e.noShake!==!0&&i()}function k(s){z.value===!0&&C.value===!0&&il(o.value,s.target)!==!0&&Q()}Object.assign(H.proxy,{focus:Q,shake:i,__updateRefocusTarget(s){c=s||null}}),Ye(d);function S(){return b("div",K(I({},g),{class:G.value}),[b(St,{name:"q-transition--fade",appear:!0},()=>re.value===!0?b("div",{class:"q-dialog__backdrop fixed-full",style:te.value,"aria-hidden":"true",onMousedown:O}):null),b(St,{name:ae.value,appear:!0},()=>z.value===!0?b("div",I({ref:o,class:se.value,style:te.value,tabindex:-1},ce.value),ol(a.default)):null)])}return X}});const Ct=e=>["add","add-unique","toggle"].includes(e),Dl=".*+?^${}()|[]\\",$l=Object.keys(Xe);var Zl=De({name:"QSelect",inheritAttrs:!1,props:K(I(I(I({},Fl),Yt),Xe),{modelValue:{required:!0},multiple:Boolean,displayValue:[String,Number],displayValueHtml:Boolean,dropdownIcon:String,options:{type:Array,default:()=>[]},optionValue:[Function,String],optionLabel:[Function,String],optionDisable:[Function,String],hideSelected:Boolean,hideDropdownIcon:Boolean,fillInput:Boolean,maxValues:[Number,String],optionsDense:Boolean,optionsDark:{type:Boolean,default:null},optionsSelectedClass:String,optionsHtml:Boolean,optionsCover:Boolean,menuShrink:Boolean,menuAnchor:String,menuSelf:String,menuOffset:Array,popupContentClass:String,popupContentStyle:[String,Array,Object],useInput:Boolean,useChips:Boolean,newValueMode:{type:String,validator:Ct},mapOptions:Boolean,emitValue:Boolean,inputDebounce:{type:[Number,String],default:500},inputClass:[Array,String,Object],inputStyle:[Array,String,Object],tabindex:{type:[String,Number],default:0},autocomplete:String,transitionShow:String,transitionHide:String,transitionDuration:[String,Number],behavior:{type:String,validator:e=>["default","menu","dialog"].includes(e),default:"default"},virtualScrollItemSize:{type:[Number,String],default:void 0},onNewValue:Function,onFilter:Function}),emits:[...kt,"add","remove","input-value","keyup","keypress","keydown","filter-abort"],setup(e,{slots:a,emit:u}){const{proxy:g}=Pe(),{$q:H}=g,o=A(!1),z=A(!1),x=A(-1),h=A(""),M=A(!1),c=A(!1);let q,B,w,N,F,V,j,R,W;const ee=A(null),C=A(null),X=A(null),Y=A(null),Se=A(null),ie=Gt(e),se=Jt(it),D=f(()=>Array.isArray(e.options)?e.options.length:0),_e=f(()=>e.virtualScrollItemSize===void 0?e.dense===!0?24:48:e.virtualScrollItemSize),{virtualScrollSliceRange:ae,virtualScrollSliceSizeComputed:te,localResetVirtualScroll:re,padVirtualScroll:ce,onVirtualScrollEvt:G,reset:ze,scrollTo:de,setVirtualScrollSize:Q}=Tl({virtualScrollLength:D,getVirtualScrollTarget:Et,getVirtualScrollEl:ut,virtualScrollItemSizeComputed:_e}),i=Vt(),l=f(()=>{const t=e.mapOptions===!0&&e.multiple!==!0,r=e.modelValue!==void 0&&(e.modelValue!==null||t===!0)?e.multiple===!0&&Array.isArray(e.modelValue)?e.modelValue:[e.modelValue]:[];if(e.mapOptions===!0&&Array.isArray(e.options)===!0){const n=e.mapOptions===!0&&B!==void 0?B:[],m=r.map(p=>Bt(p,n));return e.modelValue===null&&t===!0?m.filter(p=>p!==null):m}return r}),d=f(()=>{const t={};return $l.forEach(r=>{const n=e[r];n!==void 0&&(t[r]=n)}),t}),v=f(()=>e.optionsDark===null?i.isDark.value:e.optionsDark),E=f(()=>vt(l.value)),O=f(()=>{let t="q-field__input q-placeholder col";return e.hideSelected===!0||l.value.length===0?[t,e.inputClass]:(t+=" q-field__input--padding",e.inputClass===void 0?t:[t,e.inputClass])}),k=f(()=>(e.virtualScrollHorizontal===!0?"q-virtual-scroll--horizontal":"")+(e.popupContentClass?" "+e.popupContentClass:"")),S=f(()=>D.value===0),s=f(()=>l.value.map(t=>L.value(t)).join(", ")),y=f(()=>e.optionsHtml===!0?()=>!0:t=>t!=null&&t.html===!0),P=f(()=>e.displayValueHtml===!0||e.displayValue===void 0&&(e.optionsHtml===!0||l.value.some(y.value))),Z=f(()=>i.focused.value===!0?e.tabindex:-1),le=f(()=>({tabindex:e.tabindex,role:"combobox","aria-label":e.label,"aria-autocomplete":e.useInput===!0?"list":"none","aria-expanded":o.value===!0?"true":"false","aria-owns":`${i.targetUid.value}_lb`,"aria-controls":`${i.targetUid.value}_lb`})),ne=f(()=>{const t={id:`${i.targetUid.value}_lb`,role:"listbox","aria-multiselectable":e.multiple===!0?"true":"false"};return x.value>=0&&(t["aria-activedescendant"]=`${i.targetUid.value}_${x.value}`),t}),Me=f(()=>l.value.map((t,r)=>({index:r,opt:t,html:y.value(t),selected:!0,removeAtIndex:It,toggleOption:fe,tabindex:Z.value}))),ge=f(()=>{if(D.value===0)return[];const{from:t,to:r}=ae.value;return e.options.slice(t,r).map((n,m)=>{const p=ye.value(n)===!0,_=t+m,T={clickable:!0,active:!1,activeClass:Ie.value,manualFocus:!0,focused:!1,disable:p,tabindex:-1,dense:e.optionsDense,dark:v.value,role:"option",id:`${i.targetUid.value}_${_}`,onClick:()=>{fe(n)}};return p!==!0&&(Ke(n)===!0&&(T.active=!0),x.value===_&&(T.focused=!0),T["aria-selected"]=T.active===!0?"true":"false",H.platform.is.desktop===!0&&(T.onMousemove=()=>{o.value===!0&&be(_)})),{index:_,opt:n,html:y.value(n),label:L.value(n),selected:T.active,focused:T.focused,toggleOption:fe,setOptionIndex:be,itemProps:T}})}),he=f(()=>e.dropdownIcon!==void 0?e.dropdownIcon:H.iconSet.arrow.dropdown),Ae=f(()=>e.optionsCover===!1&&e.outlined!==!0&&e.standout!==!0&&e.borderless!==!0&&e.rounded!==!0),Ie=f(()=>e.optionsSelectedClass!==void 0?e.optionsSelectedClass:e.color!==void 0?`text-${e.color}`:""),U=f(()=>Ne(e.optionValue,"value")),L=f(()=>Ne(e.optionLabel,"label")),ye=f(()=>Ne(e.optionDisable,"disable")),Fe=f(()=>l.value.map(t=>U.value(t))),zt=f(()=>{const t={onInput:it,onChange:se,onKeydown:nt,onKeyup:tt,onKeypress:lt,onFocus:Ze,onClick(r){w===!0&&Ve(r)}};return t.onCompositionstart=t.onCompositionupdate=t.onCompositionend=se,t});oe(l,t=>{B=t,e.useInput===!0&&e.fillInput===!0&&e.multiple!==!0&&i.innerLoading.value!==!0&&(z.value!==!0&&o.value!==!0||E.value!==!0)&&(N!==!0&&xe(),(z.value===!0||o.value===!0)&&we(""))},{immediate:!0}),oe(()=>e.fillInput,xe),oe(o,je),oe(D,$t);function Ge(t){return e.emitValue===!0?U.value(t):t}function $e(t){if(t>-1&&t<l.value.length)if(e.multiple===!0){const r=e.modelValue.slice();u("remove",{index:t,value:r.splice(t,1)[0]}),u("update:modelValue",r)}else u("update:modelValue",null)}function It(t){$e(t),i.focus()}function Je(t,r){const n=Ge(t);if(e.multiple!==!0){e.fillInput===!0&&Be(L.value(t),!0,!0),u("update:modelValue",n);return}if(l.value.length===0){u("add",{index:0,value:n}),u("update:modelValue",e.multiple===!0?[n]:n);return}if(r===!0&&Ke(t)===!0||e.maxValues!==void 0&&e.modelValue.length>=e.maxValues)return;const m=e.modelValue.slice();u("add",{index:m.length,value:n}),m.push(n),u("update:modelValue",m)}function fe(t,r){if(i.editable.value!==!0||t===void 0||ye.value(t)===!0)return;const n=U.value(t);if(e.multiple!==!0){r!==!0&&(Be(e.fillInput===!0?L.value(t):"",!0,!0),ve()),C.value!==null&&C.value.focus(),(l.value.length===0||Ee(U.value(l.value[0]),n)!==!0)&&u("update:modelValue",e.emitValue===!0?n:t);return}if((w!==!0||M.value===!0)&&i.focus(),Ze(),l.value.length===0){const _=e.emitValue===!0?n:t;u("add",{index:0,value:_}),u("update:modelValue",e.multiple===!0?[_]:_);return}const m=e.modelValue.slice(),p=Fe.value.findIndex(_=>Ee(_,n));if(p>-1)u("remove",{index:p,value:m.splice(p,1)[0]});else{if(e.maxValues!==void 0&&m.length>=e.maxValues)return;const _=e.emitValue===!0?n:t;u("add",{index:m.length,value:_}),m.push(_)}u("update:modelValue",m)}function be(t){if(H.platform.is.desktop!==!0)return;const r=t>-1&&t<D.value?t:-1;x.value!==r&&(x.value=r)}function Te(t=1,r){if(o.value===!0){let n=x.value;do n=mt(n+t,-1,D.value-1);while(n!==-1&&n!==x.value&&ye.value(e.options[n])===!0);x.value!==n&&(be(n),de(n),r!==!0&&e.useInput===!0&&e.fillInput===!0&&He(n>=0?L.value(e.options[n]):V))}}function Bt(t,r){const n=m=>Ee(U.value(m),t);return e.options.find(n)||r.find(n)||t}function Ne(t,r){const n=t!==void 0?t:r;return typeof n=="function"?n:m=>m!==null&&typeof m=="object"&&n in m?m[n]:m}function Ke(t){const r=U.value(t);return Fe.value.find(n=>Ee(n,r))!==void 0}function Ze(t){e.useInput===!0&&C.value!==null&&(t===void 0||C.value===t.target&&t.target.value===s.value)&&C.value.select()}function et(t){sl(t,27)===!0&&o.value===!0&&(Ve(t),ve(),xe()),u("keyup",t)}function tt(t){const{value:r}=t.target;if(t.keyCode!==void 0){et(t);return}if(t.target.value="",clearTimeout(q),xe(),typeof r=="string"&&r.length>0){const n=r.toLocaleLowerCase(),m=_=>{const T=e.options.find($=>_.value($).toLocaleLowerCase()===n);return T===void 0?!1:(l.value.indexOf(T)===-1?fe(T):ve(),!0)},p=_=>{m(U)!==!0&&(m(L)===!0||_===!0||we(r,!0,()=>p(!0)))};p()}else i.clearValue(t)}function lt(t){u("keypress",t)}function nt(t){if(u("keydown",t),cl(t)===!0)return;const r=h.value.length>0&&(e.newValueMode!==void 0||e.onNewValue!==void 0),n=t.shiftKey!==!0&&e.multiple!==!0&&(x.value>-1||r===!0);if(t.keyCode===27){Ue(t);return}if(t.keyCode===9&&n===!1){Ce();return}if(t.target===void 0||t.target.id!==i.targetUid.value)return;if(t.keyCode===40&&i.innerLoading.value!==!0&&o.value===!1){me(t),ke();return}if(t.keyCode===8&&e.hideSelected!==!0&&h.value.length===0){e.multiple===!0&&Array.isArray(e.modelValue)===!0?$e(e.modelValue.length-1):e.multiple!==!0&&e.modelValue!==null&&u("update:modelValue",null);return}(t.keyCode===35||t.keyCode===36)&&(typeof h.value!="string"||h.value.length===0)&&(me(t),x.value=-1,Te(t.keyCode===36?1:-1,e.multiple)),(t.keyCode===33||t.keyCode===34)&&te.value!==void 0&&(me(t),x.value=Math.max(-1,Math.min(D.value,x.value+(t.keyCode===33?-1:1)*te.value.view)),Te(t.keyCode===33?1:-1,e.multiple)),(t.keyCode===38||t.keyCode===40)&&(me(t),Te(t.keyCode===38?-1:1,e.multiple));const m=D.value;if((R===void 0||W<Date.now())&&(R=""),m>0&&e.useInput!==!0&&t.key!==void 0&&t.key.length===1&&t.altKey===t.ctrlKey&&(t.keyCode!==32||R.length>0)){o.value!==!0&&ke(t);const p=t.key.toLocaleLowerCase(),_=R.length===1&&R[0]===p;W=Date.now()+1500,_===!1&&(me(t),R+=p);const T=new RegExp("^"+R.split("").map(Qe=>Dl.indexOf(Qe)>-1?"\\"+Qe:Qe).join(".*"),"i");let $=x.value;if(_===!0||$<0||T.test(L.value(e.options[$]))!==!0)do $=mt($+1,-1,m-1);while($!==x.value&&(ye.value(e.options[$])===!0||T.test(L.value(e.options[$]))!==!0));x.value!==$&&ue(()=>{be($),de($),$>=0&&e.useInput===!0&&e.fillInput===!0&&He(L.value(e.options[$]))});return}if(!(t.keyCode!==13&&(t.keyCode!==32||e.useInput===!0||R!=="")&&(t.keyCode!==9||n===!1))){if(t.keyCode!==9&&me(t),x.value>-1&&x.value<m){fe(e.options[x.value]);return}if(r===!0){const p=(_,T)=>{if(T){if(Ct(T)!==!0)return}else T=e.newValueMode;if(_==null)return;Be("",e.multiple!==!0,!0),(T==="toggle"?fe:Je)(_,T==="add-unique"),e.multiple!==!0&&(C.value!==null&&C.value.focus(),ve())};if(e.onNewValue!==void 0?u("new-value",h.value,p):p(h.value),e.multiple!==!0)return}o.value===!0?Ce():i.innerLoading.value!==!0&&ke()}}function ut(){return w===!0?Se.value:X.value!==null&&X.value.__qPortalInnerRef.value!==null?X.value.__qPortalInnerRef.value:void 0}function Et(){return ut()}function pt(){return e.hideSelected===!0?[]:a["selected-item"]!==void 0?Me.value.map(t=>a["selected-item"](t)).slice():a.selected!==void 0?[].concat(a.selected()):e.useChips===!0?Me.value.map((t,r)=>b(Rl,{key:"option-"+r,removable:i.editable.value===!0&&ye.value(t.opt)!==!0,dense:!0,textColor:e.color,tabindex:Z.value,onRemove(){t.removeAtIndex(r)}},()=>b("span",{class:"ellipsis",[t.html===!0?"innerHTML":"textContent"]:L.value(t.opt)}))):[b("span",{[P.value===!0?"innerHTML":"textContent"]:e.displayValue!==void 0?e.displayValue:s.value})]}function ot(){if(S.value===!0)return a["no-option"]!==void 0?a["no-option"]({inputValue:h.value}):void 0;const t=a.option!==void 0?a.option:n=>b(hl,I({key:n.index},n.itemProps),()=>b(gl,()=>b(yl,()=>b("span",{[n.html===!0?"innerHTML":"textContent"]:n.label}))));let r=ce("div",ge.value.map(t));return a["before-options"]!==void 0&&(r=a["before-options"]().concat(r)),dl(a["after-options"],r)}function Mt(t,r){const n=r===!0?I(I({},le.value),i.splitAttrs.attributes.value):void 0,m=I(K(I({ref:r===!0?C:void 0,key:"i_t",class:O.value,style:e.inputStyle,value:h.value!==void 0?h.value:"",type:"search"},n),{id:r===!0?i.targetUid.value:void 0,maxlength:e.maxlength,autocomplete:e.autocomplete,"data-autofocus":t!==!0&&e.autofocus===!0||void 0,disabled:e.disable===!0,readonly:e.readonly===!0}),zt.value);return t!==!0&&w===!0&&(Array.isArray(m.class)===!0?m.class=[...m.class,"no-pointer-events"]:m.class+=" no-pointer-events"),b("input",m)}function it(t){clearTimeout(q),!(t&&t.target&&t.target.composing===!0)&&(He(t.target.value||""),N=!0,V=h.value,i.focused.value!==!0&&(w!==!0||M.value===!0)&&i.focus(),e.onFilter!==void 0&&(q=setTimeout(()=>{we(h.value)},e.inputDebounce)))}function He(t){h.value!==t&&(h.value=t,u("input-value",t))}function Be(t,r,n){N=n!==!0,e.useInput===!0&&(He(t),(r===!0||n!==!0)&&(V=t),r!==!0&&we(t))}function we(t,r,n){if(e.onFilter===void 0||r!==!0&&i.focused.value!==!0)return;i.innerLoading.value===!0?u("filter-abort"):(i.innerLoading.value=!0,c.value=!0),t!==""&&e.multiple!==!0&&l.value.length>0&&N!==!0&&t===L.value(l.value[0])&&(t="");const m=setTimeout(()=>{o.value===!0&&(o.value=!1)},10);clearTimeout(F),F=m,u("filter",t,(p,_)=>{(r===!0||i.focused.value===!0)&&F===m&&(clearTimeout(F),typeof p=="function"&&p(),c.value=!1,ue(()=>{i.innerLoading.value=!1,i.editable.value===!0&&(r===!0?o.value===!0&&ve():o.value===!0?je(!0):o.value=!0),typeof _=="function"&&ue(()=>{_(g)}),typeof n=="function"&&ue(()=>{n(g)})}))},()=>{i.focused.value===!0&&F===m&&(clearTimeout(F),i.innerLoading.value=!1,c.value=!1),o.value===!0&&(o.value=!1)})}function At(){return b(ql,K(I({ref:X,class:k.value,style:e.popupContentStyle,modelValue:o.value,fit:e.menuShrink!==!0,cover:e.optionsCover===!0&&S.value!==!0&&e.useInput!==!0,anchor:e.menuAnchor,self:e.menuSelf,offset:e.menuOffset,dark:v.value,noParentEvent:!0,noRefocus:!0,noFocus:!0,square:Ae.value,transitionShow:e.transitionShow,transitionHide:e.transitionHide,transitionDuration:e.transitionDuration,separateClosePopup:!0},ne.value),{onScrollPassive:G,onBeforeShow:rt,onBeforeHide:Ft,onShow:Tt}),ot)}function Ft(t){st(t),Ce()}function Tt(){Q()}function Ht(t){Ve(t),C.value!==null&&C.value.focus(),M.value=!0,window.scrollTo(window.pageXOffset||window.scrollX||document.body.scrollLeft||0,0)}function Ot(t){Ve(t),ue(()=>{M.value=!1})}function Rt(){const t=[b(Hl,K(I(K(I({class:`col-auto ${i.fieldClass.value}`},d.value),{for:i.targetUid.value,dark:v.value,square:!0,loading:c.value,itemAligned:!1,filled:!0,stackLabel:h.value.length>0}),i.splitAttrs.listeners.value),{onFocus:Ht,onBlur:Ot}),K(I({},a),{rawControl:()=>i.getControl(!0),before:void 0,after:void 0}))];return o.value===!0&&t.push(b("div",K(I({ref:Se,class:k.value+" scroll",style:e.popupContentStyle},ne.value),{onClick:Ue,onScrollPassive:G}),ot())),b(Pl,{ref:Y,modelValue:z.value,position:e.useInput===!0?"top":void 0,transitionShow:j,transitionHide:e.transitionHide,transitionDuration:e.transitionDuration,onBeforeShow:rt,onBeforeHide:Lt,onHide:Pt,onShow:Dt},()=>b("div",{class:"q-select__dialog"+(v.value===!0?" q-select__dialog--dark q-dark":"")+(M.value===!0?" q-select__dialog--focused":"")},t))}function Lt(t){st(t),Y.value!==null&&Y.value.__updateRefocusTarget(i.rootRef.value.querySelector(".q-field__native > [tabindex]:last-child")),i.focused.value=!1}function Pt(t){ve(),i.focused.value===!1&&u("blur",t),xe()}function Dt(){const t=document.activeElement;(t===null||t.id!==i.targetUid.value)&&C.value!==null&&C.value!==t&&C.value.focus(),Q()}function Ce(){z.value!==!0&&(x.value=-1,o.value===!0&&(o.value=!1),i.focused.value===!1&&(clearTimeout(F),F=void 0,i.innerLoading.value===!0&&(u("filter-abort"),i.innerLoading.value=!1,c.value=!1)))}function ke(t){i.editable.value===!0&&(w===!0?(i.onControlFocusin(t),z.value=!0,ue(()=>{i.focus()})):i.focus(),e.onFilter!==void 0?we(h.value):(S.value!==!0||a["no-option"]!==void 0)&&(o.value=!0))}function ve(){z.value=!1,Ce()}function xe(){e.useInput===!0&&Be(e.multiple!==!0&&e.fillInput===!0&&l.value.length>0&&L.value(l.value[0])||"",!0,!0)}function je(t){let r=-1;if(t===!0){if(l.value.length>0){const n=U.value(l.value[0]);r=e.options.findIndex(m=>Ee(U.value(m),n))}re(r)}be(r)}function $t(){o.value===!0&&i.innerLoading.value===!1&&(ze(),ue(()=>{o.value===!0&&i.innerLoading.value===!1&&je(!0)}))}function at(){z.value===!1&&X.value!==null&&X.value.updatePosition()}function rt(t){t!==void 0&&Ve(t),u("popup-show",t),i.hasPopupOpen=!0,i.onControlFocusin(t)}function st(t){t!==void 0&&Ve(t),u("popup-hide",t),i.hasPopupOpen=!1,i.onControlFocusout(t)}function ct(){w=H.platform.is.mobile!==!0&&e.behavior!=="dialog"?!1:e.behavior!=="menu"&&(e.useInput===!0?a["no-option"]!==void 0||e.onFilter!==void 0||S.value===!1:!0),j=H.platform.is.ios===!0&&w===!0&&e.useInput===!0?"fade":e.transitionShow}return al(ct),rl(at),ct(),Ye(()=>{clearTimeout(q)}),Object.assign(g,{showPopup:ke,hidePopup:ve,removeAtIndex:$e,add:Je,toggleOption:fe,getOptionIndex:()=>x.value,setOptionIndex:be,moveOptionSelection:Te,filter:we,updateMenuPosition:at,updateInputValue:Be,isOptionSelected:Ke,getEmittingOptionValue:Ge,isOptionDisabled:(...t)=>ye.value.apply(null,t)===!0,getOptionValue:(...t)=>U.value.apply(null,t),getOptionLabel:(...t)=>L.value.apply(null,t)}),Object.assign(i,{innerValue:l,fieldClass:f(()=>`q-select q-field--auto-height q-select--with${e.useInput!==!0?"out":""}-input q-select--with${e.useChips!==!0?"out":""}-chips q-select--${e.multiple===!0?"multiple":"single"}`),inputRef:ee,targetRef:C,hasValue:E,showPopup:ke,floatingLabel:f(()=>(e.hideSelected===!0?h.value.length>0:E.value===!0)||vt(e.displayValue)),getControlChild:()=>{if(i.editable.value!==!1&&(z.value===!0||S.value!==!0||a["no-option"]!==void 0))return w===!0?Rt():At();i.hasPopupOpen===!0&&(i.hasPopupOpen=!1)},controlEvents:{onFocusin(t){i.onControlFocusin(t)},onFocusout(t){i.onControlFocusout(t,()=>{xe(),Ce()})},onClick(t){if(Ue(t),w!==!0&&o.value===!0){Ce(),C.value!==null&&C.value.focus();return}ke(t)}},getControl:t=>{const r=pt(),n=t===!0||z.value!==!0||w!==!0;if(e.useInput===!0)r.push(Mt(t,n));else if(i.editable.value===!0){const p=n===!0?le.value:void 0;r.push(b("input",K(I({ref:n===!0?C:void 0,key:"d_t",class:"q-select__focus-target",id:n===!0?i.targetUid.value:void 0,readonly:!0},p),{onKeydown:nt,onKeyup:et,onKeypress:lt}))),n===!0&&typeof e.autocomplete=="string"&&e.autocomplete.length>0&&r.push(b("input",{class:"q-select__autocomplete-input",autocomplete:e.autocomplete,onKeyup:tt}))}if(ie.value!==void 0&&e.disable!==!0&&Fe.value.length>0){const p=Fe.value.map(_=>b("option",{value:_,selected:!0}));r.push(b("select",{class:"hidden",name:ie.value,multiple:e.multiple},p))}const m=e.useInput===!0||n!==!0?void 0:i.splitAttrs.attributes.value;return b("div",I({class:"q-field__native row items-center"},m),r)},getInnerAppend:()=>e.loading!==!0&&c.value!==!0&&e.hideDropdownIcon!==!0?[b(Re,{class:"q-select__dropdown-icon"+(o.value===!0?" rotate-180":""),name:he.value})]:null}),xt(i)}});export{Zl as Q,Tl as a,Rl as b,Jl as c,Fl as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
