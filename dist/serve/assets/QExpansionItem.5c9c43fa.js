var J=Object.defineProperty,U=Object.defineProperties;var W=Object.getOwnPropertyDescriptors;var Q=Object.getOwnPropertySymbols;var X=Object.prototype.hasOwnProperty,Z=Object.prototype.propertyIsEnumerable;var B=(e,i,a)=>i in e?J(e,i,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[i]=a,L=(e,i)=>{for(var a in i||(i={}))X.call(i,a)&&B(e,a,i[a]);if(Q)for(var a of Q(i))Z.call(i,a)&&B(e,a,i[a]);return e},E=(e,i)=>U(e,W(i));import{K as $,L as R,N as o,a1 as ee,aO as te,P as ne,x as P,J as b,G as q,a2 as ie,aP as ae,R as oe,a3 as le}from"./vendor.3fb54e24.js";import{Q as ue,a as _}from"./QItemSection.dc8b2532.js";import{Q as j,a as H}from"./QItemLabel.7ecff6cd.js";import{d as se,e as re,c as N}from"./QCard.ba24e7ad.js";import{l as A,y as ce}from"./use-key-composition.9a07a52d.js";import{u as de,a as ge,b as fe}from"./use-model-toggle.a87aeb12.js";var he=$({name:"QSlideTransition",props:{appear:Boolean,duration:{type:Number,default:300}},emits:["show","hide"],setup(e,{slots:i,emit:a}){let d=!1,m,l,v,I,s,u;function r(){m&&m(),m=null,d=!1,clearTimeout(v),clearTimeout(I),l!==void 0&&l.removeEventListener("transitionend",s),s=null}function T(n,c,g){n.style.overflowY="hidden",c!==void 0&&(n.style.height=`${c}px`),n.style.transition=`height ${e.duration}ms cubic-bezier(.25, .8, .50, 1)`,d=!0,m=g}function y(n,c){n.style.overflowY=null,n.style.height=null,n.style.transition=null,r(),c!==u&&a(c)}function S(n,c){let g=0;l=n,d===!0?(r(),g=n.offsetHeight===n.scrollHeight?0:void 0):u="hide",T(n,g,c),v=setTimeout(()=>{n.style.height=`${n.scrollHeight}px`,s=f=>{(Object(f)!==f||f.target===n)&&y(n,"show")},n.addEventListener("transitionend",s),I=setTimeout(s,e.duration*1.1)},100)}function k(n,c){let g;l=n,d===!0?r():(u="show",g=n.scrollHeight),T(n,g,c),v=setTimeout(()=>{n.style.height=0,s=f=>{(Object(f)!==f||f.target===n)&&y(n,"hide")},n.addEventListener("transitionend",s),I=setTimeout(s,e.duration*1.1)},100)}return R(()=>{d===!0&&r()}),()=>o(ee,{css:!1,appear:e.appear,onEnter:S,onLeave:k},i.default)}});const x=te({}),me=Object.keys(A);var we=$({name:"QExpansionItem",props:E(L(L(L({},A),de),se),{icon:String,label:String,labelLines:[Number,String],caption:String,captionLines:[Number,String],dense:Boolean,expandIcon:String,expandedIcon:String,expandIconClass:[Array,String,Object],duration:Number,headerInsetLevel:Number,contentInsetLevel:Number,expandSeparator:Boolean,defaultOpened:Boolean,expandIconToggle:Boolean,switchToggleSide:Boolean,denseToggle:Boolean,group:String,popup:Boolean,headerStyle:[Array,String,Object],headerClass:[Array,String,Object]}),emits:[...ge,"click","after-show","after-hide"],setup(e,{slots:i,emit:a}){const{proxy:{$q:d}}=ne(),m=re(e,d),l=P(e.modelValue!==null?e.modelValue:e.defaultOpened),v=P(null),{hide:I,toggle:s}=fe({showing:l});let u,r;const T=b(()=>`q-expansion-item q-item-type q-expansion-item--${l.value===!0?"expanded":"collapsed"} q-expansion-item--${e.popup===!0?"popup":"standard"}`),y=b(()=>{if(e.contentInsetLevel===void 0)return null;const t=d.lang.rtl===!0?"Right":"Left";return{["padding"+t]:e.contentInsetLevel*56+"px"}}),S=b(()=>e.disable!==!0&&(e.href!==void 0||e.to!==void 0&&e.to!==null&&e.to!=="")),k=b(()=>{const t={};return me.forEach(h=>{t[h]=e[h]}),t}),n=b(()=>S.value===!0||e.expandIconToggle!==!0),c=b(()=>e.expandedIcon!==void 0&&l.value===!0?e.expandedIcon:e.expandIcon||d.iconSet.expansionItem[e.denseToggle===!0?"denseIcon":"icon"]),g=b(()=>e.disable!==!0&&(S.value===!0||e.expandIconToggle===!0));q(()=>e.group,t=>{r!==void 0&&r(),t!==void 0&&O()});function f(t){S.value!==!0&&s(t),a("click",t)}function D(t){t.keyCode===13&&C(t,!0)}function C(t,h){h!==!0&&v.value!==null&&v.value.focus(),s(t),le(t)}function G(){a("after-show")}function K(){a("after-hide")}function O(){u===void 0&&(u=ce()),l.value===!0&&(x[e.group]=u);const t=q(l,w=>{w===!0?x[e.group]=u:x[e.group]===u&&delete x[e.group]}),h=q(()=>x[e.group],(w,z)=>{z===u&&w!==void 0&&w!==u&&I()});r=()=>{t(),h(),x[e.group]===u&&delete x[e.group],r=void 0}}function M(){const t={class:[`q-focusable relative-position cursor-pointer${e.denseToggle===!0&&e.switchToggleSide===!0?" items-end":""}`,e.expandIconClass],side:e.switchToggleSide!==!0,avatar:e.switchToggleSide},h=[o(N,{class:"q-expansion-item__toggle-icon"+(e.expandedIcon===void 0&&l.value===!0?" q-expansion-item__toggle-icon--rotated":""),name:c.value})];return g.value===!0&&(Object.assign(t,{tabindex:0,onClick:C,onKeyup:D}),h.unshift(o("div",{ref:v,class:"q-expansion-item__toggle-focus q-icon q-focus-helper q-focus-helper--rounded",tabindex:-1}))),o(_,t,()=>h)}function F(){let t;return i.header!==void 0?t=[].concat(i.header()):(t=[o(_,()=>[o(H,{lines:e.labelLines},()=>e.label||""),e.caption?o(H,{lines:e.captionLines,caption:!0},()=>e.caption):null])],e.icon&&t[e.switchToggleSide===!0?"push":"unshift"](o(_,{side:e.switchToggleSide===!0,avatar:e.switchToggleSide!==!0},()=>o(N,{name:e.icon})))),e.disable!==!0&&t[e.switchToggleSide===!0?"unshift":"push"](M()),t}function V(){const t={ref:"item",style:e.headerStyle,class:e.headerClass,dark:m.value,disable:e.disable,dense:e.dense,insetLevel:e.headerInsetLevel};return n.value===!0&&(t.clickable=!0,t.onClick=f,S.value===!0&&Object.assign(t,k.value)),o(ue,t,F)}function Y(){return ie(o("div",{key:"e-content",class:"q-expansion-item__content relative-position",style:y.value},oe(i.default)),[[ae,l.value]])}function p(){const t=[V(),o(he,{duration:e.duration,onShow:G,onHide:K},Y)];return e.expandSeparator===!0&&t.push(o(j,{class:"q-expansion-item__border q-expansion-item__border--top absolute-top",dark:m.value}),o(j,{class:"q-expansion-item__border q-expansion-item__border--bottom absolute-bottom",dark:m.value})),t}return e.group!==void 0&&O(),R(()=>{r!==void 0&&r()}),()=>o("div",{class:T.value},[o("div",{class:"q-expansion-item__container relative-position"},p())])}});export{we as Q};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
