var P=Object.defineProperty,E=Object.defineProperties;var S=Object.getOwnPropertyDescriptors;var A=Object.getOwnPropertySymbols;var q=Object.prototype.hasOwnProperty,C=Object.prototype.propertyIsEnumerable;var _=(e,n,o)=>n in e?P(e,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[n]=o,r=(e,n)=>{for(var o in n||(n={}))q.call(n,o)&&_(e,o,n[o]);if(A)for(var o of A(n))C.call(n,o)&&_(e,o,n[o]);return e},y=(e,n)=>E(e,S(n));import{r as T,o as U,c as $,w,a as L,Q as O,g as t,u as a,b as d,d as k,e as M,m as Q,f as V,h as N,i as b,s as H,j as x,k as F,l as B,n as G,p as W,q as z,V as j}from"./vendor.3fb54e24.js";const K=function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))l(i);new MutationObserver(i=>{for(const p of i)if(p.type==="childList")for(const c of p.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&l(c)}).observe(document,{childList:!0,subtree:!0});function o(i){const p={};return i.integrity&&(p.integrity=i.integrity),i.referrerpolicy&&(p.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?p.credentials="include":i.crossorigin==="anonymous"?p.credentials="omit":p.credentials="same-origin",p}function l(i){if(i.ep)return;i.ep=!0;const p=o(i);fetch(i.href,p)}};K();var J=(e,n)=>{const o=e.__vccOpts||e;for(const[l,i]of n)o[l]=i;return o};const X={};function Y(e,n){const o=T("router-view");return U(),$(O,null,{default:w(()=>[L(o)]),_:1})}var Z=J(X,[["render",Y]]);const ee="modulepreload",R={},te="/",u=function(n,o){return!o||o.length===0?n():Promise.all(o.map(l=>{if(l=`${te}${l}`,l in R)return;R[l]=!0;const i=l.endsWith(".css"),p=i?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${p}`))return;const c=document.createElement("link");if(c.rel=i?"stylesheet":ee,i||(c.as="script",c.crossOrigin=""),c.href=l,document.head.appendChild(c),i)return new Promise((v,I)=>{c.addEventListener("load",v),c.addEventListener("error",()=>I(new Error(`Unable to preload CSS for ${l}`)))})})).then(()=>n())};var s=(e=>(e.ADMIN="ADMIN",e.USER="USER",e))(s||{});const ne=t`
    mutation Login($input: LoginInput!) {
  login(input: $input) {
    firstName
    id
    lastName
    role
    token
  }
}
    `;function et(){return d(ne)}const oe=t`
    mutation ForgotPassword($input: ForgotPasswordInput!) {
  forgotPassword(input: $input)
}
    `;function tt(){return d(oe)}const re=t`
    mutation ResetPassword($input: ResetPasswordInput!) {
  resetPassword(input: $input)
}
    `;function nt(){return d(re)}t`
    mutation CreateProcedure($input: CreateProcedureInput!) {
  createProcedure(input: $input) {
    id
    name
  }
}
    `;const ie=t`
    mutation CreateHospital($input: CreateHospitalInput!) {
  createHospital(input: $input) {
    id
    name
  }
}
    `;function ot(){return d(ie)}const ae=t`
    mutation CreateSupervisor($input: CreateSupervisorInput!) {
  createSupervisor(input: $input) {
    id
    name
  }
}
    `;function rt(){return d(ae)}const ue=t`
    mutation CreateRotation($input: CreateRotationInput!) {
  createRotation(input: $input) {
    id
    name
  }
}
    `;function it(){return d(ue)}t`
    mutation CreateProcedureType($input: CreateProcedureTypeInput!) {
  createProcedureType(input: $input) {
    id
    name
  }
}
    `;const se=t`
    mutation CreateConsult($input: CreateConsultInput!) {
  createConsult(input: $input) {
    id
    name
    urn
    userId
    hospital {
      id
      name
    }
    rotationPeriod {
      id
      name
    }
    setLevel {
      id
      name
    }
    procedureDate
    supervisor {
      id
      name
    }
    startTime
    endTime
    gender
    ethnicity {
      id
      name
    }
    admissionDate
    dateOfBirth
    patientAge
    procedureDuration {
      hours
      minutes
    }
    admissionCategory {
      id
      name
    }
    unplannedReadmission {
      id
      name
    }
    fundingType {
      id
      name
    }
    diagnosisDate
    preManagementDiagnosis
    recognisedCoMorbidities
    asaGrade {
      id
      name
    }
    woundInfectionRisk {
      id
      name
    }
    typeOfAnaesthetic {
      id
      name
    }
    prophylaxis
    finalDiagnosis
    pathologicalDiagnoses
    unplannedIcu {
      id
      name
    }
    returnToTheatre {
      id
      name
    }
    dischargeDate
    outcome {
      id
      name
    }
    mortalityClassification {
      id
      name
    }
    recurrenceDate
    discussedAtMdm
    comments
    user {
      id
      firstName
      lastName
    }
    createdAt
    updatedAt
    deletedAt
    procedures {
      id
      procedure {
        id
        name
        type {
          id
          name
        }
      }
    }
  }
}
    `;function at(){return d(se)}t`
    mutation UpdateProcedure($input: UpdateProcedureInput!) {
  updateProcedure(input: $input) {
    id
    name
  }
}
    `;t`
    mutation UpdateProcedureType($input: UpdateProcedureTypeInput!) {
  updateProcedureType(input: $input) {
    id
    name
  }
}
    `;t`
    mutation UpdateUser($input: UpdateUserInput!) {
  updateUser(input: $input) {
    id
  }
}
    `;const le=t`
    mutation UpdateProfile($input: UpdateProfileInput!) {
  updateProfile(input: $input) {
    id
    firstName
    lastName
    email
  }
}
    `;function ut(){return d(le)}const de=t`
    mutation UpdatePassword($input: UpdatePasswordInput!) {
  updatePassword(input: $input) {
    id
    firstName
    lastName
    email
  }
}
    `;function st(){return d(de)}const pe=t`
    mutation UpdateHospital($input: UpdateHospitalInput!) {
  updateHospital(input: $input) {
    id
    name
    urnMask
  }
}
    `;function lt(){return d(pe)}const ce=t`
    mutation UpdateSupervisor($input: UpdateSupervisorInput!) {
  updateSupervisor(input: $input) {
    id
    name
  }
}
    `;function dt(){return d(ce)}const me=t`
    mutation UpdateRotation($input: UpdateRotationInput!) {
  updateRotation(input: $input) {
    id
    name
    startDate
    endDate
    setLevel {
      id
      name
    }
    hospitalId
    hospital {
      id
      name
    }
    supervisors {
      id
      name
    }
  }
}
    `;function pt(){return d(me)}const fe=t`
    mutation UpdateConsult($input: UpdateConsultInput!) {
  updateConsult(input: $input) {
    id
    name
    urn
    userId
    hospital {
      id
      name
    }
    rotationPeriod {
      id
      name
    }
    setLevel {
      id
      name
    }
    procedureDate
    supervisor {
      id
      name
    }
    startTime
    endTime
    gender
    ethnicity {
      id
      name
    }
    admissionDate
    dateOfBirth
    patientAge
    procedureDuration {
      hours
      minutes
    }
    admissionCategory {
      id
      name
    }
    unplannedReadmission {
      id
      name
    }
    fundingType {
      id
      name
    }
    diagnosisDate
    preManagementDiagnosis
    recognisedCoMorbidities
    asaGrade {
      id
      name
    }
    woundInfectionRisk {
      id
      name
    }
    typeOfAnaesthetic {
      id
      name
    }
    prophylaxis
    finalDiagnosis
    pathologicalDiagnoses
    unplannedIcu {
      id
      name
    }
    returnToTheatre {
      id
      name
    }
    dischargeDate
    outcome {
      id
      name
    }
    mortalityClassification {
      id
      name
    }
    recurrenceDate
    discussedAtMdm
    comments
    user {
      id
      firstName
      lastName
    }
    createdAt
    updatedAt
    deletedAt
    procedures {
      id
      procedure {
        id
        name
        type {
          id
          name
        }
      }
    }
  }
}
    `;function ct(){return d(fe)}const he=t`
    mutation Register($input: RegisterInput!) {
  register(input: $input) {
    firstName
    id
    lastName
    role
    token
  }
}
    `;function mt(){return d(he)}t`
    mutation DeleteConsult($input: DeleteConsultInput!) {
  deleteConsult(input: $input) {
    id
  }
}
    `;t`
    mutation DeleteHospital($input: DeleteHospitalInput!) {
  deleteHospital(input: $input) {
    id
  }
}
    `;t`
    mutation DeleteSupervisor($input: DeleteSupervisorInput!) {
  deleteSupervisor(input: $input) {
    id
  }
}
    `;t`
    mutation DeleteProcedure($input: DeleteProcedureInput!) {
  deleteProcedure(input: $input) {
    id
  }
}
    `;t`
    mutation DeleteRotation($input: DeleteRotationInput!) {
  deleteRotation(input: $input) {
    id
  }
}
    `;t`
    mutation DeleteProcedureType($input: DeleteProcedureTypeInput!) {
  deleteProcedureType(input: $input) {
    id
  }
}
    `;t`
    mutation DeleteUser($input: DeleteUserInput!) {
  deleteUser(input: $input) {
    id
  }
}
    `;const ye=t`
    mutation ImageUpload($input: ImageUploadInput!) {
  imageUpload(input: $input) {
    name
    urn
    dateOfBirth
  }
}
    `;function ft(){return d(ye)}const Ae=t`
    query AllConsults {
  allConsults {
    id
    name
    procedureDate
    hospital {
      id
      name
    }
    isCompleted
    urn
  }
}
    `;function ht(e={}){return a(r({query:Ae},e))}const _e=t`
    query AllProcedures {
  allProcedures {
    id
    name
    type {
      id
      name
    }
  }
}
    `;function yt(e={}){return a(r({query:_e},e))}t`
    query AllProcedureTypes {
  allProcedureTypes {
    id
    name
  }
}
    `;const Re=t`
    query Search($input: SearchInput!) {
  search(input: $input) {
    ... on Consult {
      id
      name
      urn
    }
  }
}
    `;function At(e={}){return a(r({query:Re},e))}const De=t`
    query AllRotations {
  allRotations {
    id
    name
    startDate
    endDate
    setLevel {
      id
      name
    }
    hospital {
      id
      name
      urnMask
    }
    supervisors {
      id
      name
    }
  }
}
    `;function _t(e={}){return a(r({query:De},e))}t`
    query Procedure($input: ProcedureInput!) {
  procedure(input: $input) {
    id
    name
    type {
      id
      name
    }
  }
}
    `;const ge=t`
    query Consult($input: ConsultInput!) {
  consult(input: $input) {
    id
    name
    urn
    userId
    hospitalId
    supervisorId
    setLevelId
    admissionCategoryId
    ethnicityId
    unplannedReadmissionId
    fundingTypeId
    asaGradeId
    woundInfectionRiskId
    typeOfAnaestheticId
    unplannedIcuId
    returnToTheatreId
    outcomeId
    mortalityClassificationId
    rotationPeriod {
      id
      name
    }
    setLevel {
      id
      name
    }
    procedureDate
    hospital {
      id
      name
    }
    supervisor {
      id
      name
    }
    user {
      id
      firstName
      lastName
    }
    startTime
    endTime
    gender
    admissionDate
    dateOfBirth
    patientAge
    procedureDuration {
      hours
      minutes
    }
    admissionCategory {
      id
      name
    }
    ethnicity {
      id
      name
    }
    unplannedReadmission {
      id
      name
    }
    fundingType {
      id
      name
    }
    asaGrade {
      id
      name
    }
    woundInfectionRisk {
      id
      name
    }
    typeOfAnaesthetic {
      id
      name
    }
    unplannedIcu {
      id
      name
    }
    returnToTheatre {
      id
      name
    }
    outcome {
      id
      name
    }
    mortalityClassification {
      id
      name
    }
    diagnosisDate
    preManagementDiagnosis
    recognisedCoMorbidities
    prophylaxis
    finalDiagnosis
    pathologicalDiagnoses
    isCompleted
    dischargeDate
    recurrenceDate
    discussedAtMdm
    comments
    createdAt
    updatedAt
    deletedAt
    procedures {
      id
      supervisionLevel {
        id
        name
      }
      procedure {
        id
        name
        type {
          id
          name
        }
      }
    }
  }
}
    `;function Rt(e={}){return a(r({query:ge},e))}t`
    query AllUsers {
  allUsers {
    email
    firstName
    id
    lastName
    role
  }
}
    `;const ve=t`
    query Profile {
  profile {
    email
    firstName
    id
    lastName
    role
  }
}
    `;function Dt(e={}){return a(r({query:ve},e))}const Ie=t`
    query AllSupervisors {
  allSupervisors {
    id
    name
  }
}
    `;function gt(e={}){return a(r({query:Ie},e))}const Pe=t`
    query Supervisor($input: SupervisorInput!) {
  supervisor(input: $input) {
    id
    name
  }
}
    `;function vt(e={}){return a(r({query:Pe},e))}const Ee=t`
    query Rotation($input: RotationInput!) {
  rotation(input: $input) {
    id
    name
    startDate
    endDate
    setLevel {
      id
      name
    }
    hospitalId
    hospital {
      id
      name
      urnMask
    }
    supervisors {
      id
      name
    }
  }
}
    `;function It(e={}){return a(r({query:Ee},e))}const Se=t`
    query AllHospitals {
  allHospitals {
    id
    name
    urnMask
  }
}
    `;function Pt(e={}){return a(r({query:Se},e))}const qe=t`
    query Hospital($input: HospitalInput!) {
  hospital(input: $input) {
    id
    name
    urnMask
  }
}
    `;function Et(e={}){return a(r({query:qe},e))}const Ce=t`
    query CurrentRotation {
  currentRotation {
    id
    name
    startDate
    endDate
    setLevel {
      id
      name
    }
    hospital {
      id
      name
    }
  }
}
    `;function St(e={}){return a(r({query:Ce},e))}const Te=t`
    query AllAdmissionCategories {
  allAdmissionCategories {
    id
    name
  }
}
    `;function qt(e={}){return a(r({query:Te},e))}const Ue=t`
    query AllEthnicities {
  allEthnicities {
    id
    name
  }
}
    `;function Ct(e={}){return a(r({query:Ue},e))}const $e=t`
    query AllSupervisionLevels {
  allSupervisionLevels {
    id
    name
  }
}
    `;function Tt(e={}){return a(r({query:$e},e))}const we=t`
    query AllUnplannedReadmissions {
  allUnplannedReadmissions {
    id
    name
  }
}
    `;function Ut(e={}){return a(r({query:we},e))}const Le=t`
    query AllFundingTypes {
  allFundingTypes {
    id
    name
  }
}
    `;function $t(e={}){return a(r({query:Le},e))}const Oe=t`
    query AllSetLevels {
  allSetLevels {
    id
    name
  }
}
    `;function wt(e={}){return a(r({query:Oe},e))}const ke=t`
    query AllAsaGrades {
  allAsaGrades {
    id
    name
  }
}
    `;function Lt(e={}){return a(r({query:ke},e))}const Me=t`
    query AllWoundInfectionRisks {
  allWoundInfectionRisks {
    id
    name
  }
}
    `;function Ot(e={}){return a(r({query:Me},e))}const Qe=t`
    query AllTypeOfAnaesthetics {
  allTypeOfAnaesthetics {
    id
    name
  }
}
    `;function kt(e={}){return a(r({query:Qe},e))}const Ve=t`
    query AllUnplannedIcus {
  allUnplannedIcus {
    id
    name
  }
}
    `;function Mt(e={}){return a(r({query:Ve},e))}const Ne=t`
    query AllReturnToTheatres {
  allReturnToTheatres {
    id
    name
  }
}
    `;function Qt(e={}){return a(r({query:Ne},e))}const be=t`
    query AllOutcomes {
  allOutcomes {
    id
    name
  }
}
    `;function Vt(e={}){return a(r({query:be},e))}const He=t`
    query AllMortalityClassifications {
  allMortalityClassifications {
    id
    name
  }
}
    `;function Nt(e={}){return a(r({query:He},e))}const xe=t`
    query FundingTypeStatistics {
  allFundingTypes {
    id
    name
    totalConsults
  }
}
    `;function bt(e={}){return a(r({query:xe},e))}const Fe=t`
    query SupervisionLevelStatistics {
  allSupervisionLevels {
    id
    name
    totalConsults
  }
}
    `;function Ht(e={}){return a(r({query:Fe},e))}const Be=t`
    query ProcedureTopicStatistics {
  allProcedureTopics {
    id
    name
    shortName
    totalConsults
  }
}
    `;function xt(e={}){return a(r({query:Be},e))}const Ge=t`
    query ProcedureTypeStatistics {
  allProcedureTypes {
    id
    name
    totalConsults
  }
}
    `;function Ft(e={}){return a(r({query:Ge},e))}const We=t`
    query TotalConsults {
  totalConsults
}
    `;function Bt(e={}){return a(r({query:We},e))}const ze=t`
    query ProcedureLogbook {
  allProcedures {
    id
    name
    totalConsults
    totalPrimaryConsults
    totalSecondaryConsults
    totalAssistantConsults
  }
}
    `;function Gt(e={}){return a(r({query:ze},e))}const f=k("application",{state:()=>({credentials:{},isDrawerOpen:!0,currentRotation:null}),actions:{saveCurrentRotation(e){this.currentRotation=e},saveUser(e){this.credentials=e},toggleDrawer(){this.isDrawerOpen=!this.isDrawerOpen},logout(){this.credentials=null,this.currentRotation=null}},persist:!0}),je=[{name:"login",path:"/login",component:()=>u(()=>import("./Login.ce188c29.js"),["assets/Login.ce188c29.js","assets/QInput.c5c599b2.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QForm.d38bc74e.js","assets/QPage.ad8f831d.js","assets/QPageContainer.bb186673.js","assets/user.109a9e01.js"]),beforeEnter:()=>{const n=f().credentials;return n&&n.role?{name:"dashboard"}:!0}},{name:"register",path:"/register",component:()=>u(()=>import("./Register.0c03e8da.js"),["assets/Register.0c03e8da.js","assets/QInput.c5c599b2.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QForm.d38bc74e.js","assets/QPage.ad8f831d.js","assets/QPageContainer.bb186673.js","assets/user.109a9e01.js","assets/hcaptcha-vue3.es.4fcb56e5.js"]),beforeEnter:()=>{const n=f().credentials;return n&&n.role?{name:"dashboard"}:!0}},{name:"forgotPassword",path:"/forgotPassword",component:()=>u(()=>import("./ForgotPassword.305a1de6.js"),["assets/ForgotPassword.305a1de6.js","assets/QInput.c5c599b2.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QForm.d38bc74e.js","assets/QPage.ad8f831d.js","assets/QPageContainer.bb186673.js","assets/user.109a9e01.js","assets/hcaptcha-vue3.es.4fcb56e5.js"]),beforeEnter:()=>{const n=f().credentials;return n&&n.role?{name:"dashboard"}:!0}},{name:"resetPassword",path:"/resetPassword/:id/:emailToken",component:()=>u(()=>import("./ResetPassword.973e6769.js"),["assets/ResetPassword.973e6769.js","assets/QInput.c5c599b2.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QForm.d38bc74e.js","assets/QPage.ad8f831d.js","assets/QPageContainer.bb186673.js","assets/user.109a9e01.js"]),beforeEnter:()=>{const n=f().credentials;return n&&n.role?{name:"dashboard"}:!0}},{path:"/",component:()=>u(()=>import("./user.0dda59cd.js"),["assets/user.0dda59cd.js","assets/QPageContainer.bb186673.js","assets/vendor.3fb54e24.js","assets/use-key-composition.9a07a52d.js","assets/QCard.ba24e7ad.js","assets/QToolbar.cab69cd0.js","assets/QItemSection.dc8b2532.js","assets/QList.dc10b5ea.js","assets/QMenu.bdb281bc.js","assets/use-model-toggle.a87aeb12.js","assets/QInput.c5c599b2.js","assets/QSpace.990ed13a.js","assets/use-prevent-scroll.44e6db56.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]},children:[{name:"dashboard",path:"/",component:()=>u(()=>import("./Dashboard.2d43dcd0.js"),["assets/Dashboard.2d43dcd0.js","assets/Dashboard.41ea5747.css","assets/QCardSection.ad5c7ff8.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QPage.ad8f831d.js","assets/rotation.2b9e0722.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"consults",path:"/consults",component:()=>u(()=>import("./Consults.bb1823ad.js"),["assets/Consults.bb1823ad.js","assets/Consults.439699b6.css","assets/QSpace.990ed13a.js","assets/vendor.3fb54e24.js","assets/use-key-composition.9a07a52d.js","assets/QCard.ba24e7ad.js","assets/QPage.ad8f831d.js","assets/QCardSection.ad5c7ff8.js","assets/QTable.c8883df2.js","assets/QItemLabel.7ecff6cd.js","assets/QList.dc10b5ea.js","assets/QMarkupTable.c64ee7d2.js","assets/QSelect.895e741b.js","assets/QItemSection.dc8b2532.js","assets/QMenu.bdb281bc.js","assets/use-model-toggle.a87aeb12.js","assets/use-prevent-scroll.44e6db56.js","assets/QCheckbox.6a62765b.js","assets/consult.340fcd3b.js","assets/datetime.7d28628a.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"createConsult",path:"/consults/create",component:()=>u(()=>import("./CreateConsult.b080d1cc.js"),["assets/CreateConsult.b080d1cc.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCheckbox.6a62765b.js","assets/QItemSection.dc8b2532.js","assets/QItemLabel.7ecff6cd.js","assets/QCardSection.ad5c7ff8.js","assets/QExpansionItem.5c9c43fa.js","assets/use-model-toggle.a87aeb12.js","assets/QPage.ad8f831d.js","assets/QSelect.895e741b.js","assets/QMenu.bdb281bc.js","assets/use-prevent-scroll.44e6db56.js","assets/QForm.d38bc74e.js","assets/consult.340fcd3b.js","assets/datetime.7d28628a.js","assets/rotation.2b9e0722.js","assets/RotationPeriodSelect.a0b0b2d1.js","assets/QList.dc10b5ea.js","assets/SupervisorSelect.6ad7ef8a.js","assets/hospital.c896e4ea.js","assets/supervisor.d2052c97.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"viewConsult",path:"/consults/:id",component:()=>u(()=>import("./ViewConsult.20bc80c1.js"),["assets/ViewConsult.20bc80c1.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QCardSection.ad5c7ff8.js","assets/QInput.c5c599b2.js","assets/QCheckbox.6a62765b.js","assets/QItemSection.dc8b2532.js","assets/QItemLabel.7ecff6cd.js","assets/QExpansionItem.5c9c43fa.js","assets/use-model-toggle.a87aeb12.js","assets/QPage.ad8f831d.js","assets/QList.dc10b5ea.js","assets/consult.340fcd3b.js","assets/datetime.7d28628a.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"updateConsult",path:"/consults/:id/update",component:()=>u(()=>import("./UpdateConsult.a7dce4ba.js"),["assets/UpdateConsult.a7dce4ba.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QCardSection.ad5c7ff8.js","assets/QInput.c5c599b2.js","assets/QCheckbox.6a62765b.js","assets/QItemSection.dc8b2532.js","assets/QItemLabel.7ecff6cd.js","assets/QExpansionItem.5c9c43fa.js","assets/use-model-toggle.a87aeb12.js","assets/QForm.d38bc74e.js","assets/QPage.ad8f831d.js","assets/consult.340fcd3b.js","assets/datetime.7d28628a.js","assets/RotationPeriodSelect.a0b0b2d1.js","assets/QList.dc10b5ea.js","assets/QSelect.895e741b.js","assets/QMenu.bdb281bc.js","assets/use-prevent-scroll.44e6db56.js","assets/rotation.2b9e0722.js","assets/SupervisorSelect.6ad7ef8a.js","assets/hospital.c896e4ea.js","assets/supervisor.d2052c97.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"viewLogbook",path:"/logbook",component:()=>u(()=>import("./ViewLogbook.b8f1051d.js"),["assets/ViewLogbook.b8f1051d.js","assets/QSpace.990ed13a.js","assets/vendor.3fb54e24.js","assets/use-key-composition.9a07a52d.js","assets/QCard.ba24e7ad.js","assets/QPage.ad8f831d.js","assets/QCardSection.ad5c7ff8.js","assets/QTable.c8883df2.js","assets/QItemLabel.7ecff6cd.js","assets/QList.dc10b5ea.js","assets/QMarkupTable.c64ee7d2.js","assets/QSelect.895e741b.js","assets/QItemSection.dc8b2532.js","assets/QMenu.bdb281bc.js","assets/use-model-toggle.a87aeb12.js","assets/use-prevent-scroll.44e6db56.js","assets/QCheckbox.6a62765b.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"hospitals",path:"/hospitals",component:()=>u(()=>import("./Hospitals.4c4d9a61.js"),["assets/Hospitals.4c4d9a61.js","assets/QSpace.990ed13a.js","assets/vendor.3fb54e24.js","assets/use-key-composition.9a07a52d.js","assets/QCard.ba24e7ad.js","assets/QPage.ad8f831d.js","assets/QCardSection.ad5c7ff8.js","assets/QTable.c8883df2.js","assets/QItemLabel.7ecff6cd.js","assets/QList.dc10b5ea.js","assets/QMarkupTable.c64ee7d2.js","assets/QSelect.895e741b.js","assets/QItemSection.dc8b2532.js","assets/QMenu.bdb281bc.js","assets/use-model-toggle.a87aeb12.js","assets/use-prevent-scroll.44e6db56.js","assets/QCheckbox.6a62765b.js","assets/hospital.c896e4ea.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"createHospital",path:"/hospital/create",component:()=>u(()=>import("./CreateHospital.1ebee35a.js"),["assets/CreateHospital.1ebee35a.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QForm.d38bc74e.js","assets/QPage.ad8f831d.js","assets/hospital.c896e4ea.js","assets/QMarkupTable.c64ee7d2.js","assets/QMenu.bdb281bc.js","assets/use-model-toggle.a87aeb12.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"viewHospital",path:"/hospitals/:id",component:()=>u(()=>import("./ViewHospital.ff5c3c7a.js"),["assets/ViewHospital.ff5c3c7a.js","assets/ViewHospital.404cc5d0.css","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardSection.ad5c7ff8.js","assets/QPage.ad8f831d.js","assets/hospital.c896e4ea.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"updateHospital",path:"/hospitals/:id/update",component:()=>u(()=>import("./UpdateHospital.1270dc3e.js"),["assets/UpdateHospital.1270dc3e.js","assets/UpdateHospital.bc612f7f.css","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QPage.ad8f831d.js","assets/hospital.c896e4ea.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"rotations",path:"/rotations",component:()=>u(()=>import("./Rotations.426f3fa5.js"),["assets/Rotations.426f3fa5.js","assets/QSpace.990ed13a.js","assets/vendor.3fb54e24.js","assets/use-key-composition.9a07a52d.js","assets/QCard.ba24e7ad.js","assets/QPage.ad8f831d.js","assets/QCardSection.ad5c7ff8.js","assets/QTable.c8883df2.js","assets/QItemLabel.7ecff6cd.js","assets/QList.dc10b5ea.js","assets/QMarkupTable.c64ee7d2.js","assets/QSelect.895e741b.js","assets/QItemSection.dc8b2532.js","assets/QMenu.bdb281bc.js","assets/use-model-toggle.a87aeb12.js","assets/use-prevent-scroll.44e6db56.js","assets/QCheckbox.6a62765b.js","assets/rotation.2b9e0722.js","assets/datetime.7d28628a.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"createRotation",path:"/rotations/create",component:()=>u(()=>import("./CreateRotation.b6f8d22f.js"),["assets/CreateRotation.b6f8d22f.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QForm.d38bc74e.js","assets/QExpansionItem.5c9c43fa.js","assets/QItemSection.dc8b2532.js","assets/QItemLabel.7ecff6cd.js","assets/use-model-toggle.a87aeb12.js","assets/QPage.ad8f831d.js","assets/rotation.2b9e0722.js","assets/SupervisorSelect.6ad7ef8a.js","assets/QSelect.895e741b.js","assets/QMenu.bdb281bc.js","assets/use-prevent-scroll.44e6db56.js","assets/hospital.c896e4ea.js","assets/supervisor.d2052c97.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"viewRotation",path:"/rotations/:id",component:()=>u(()=>import("./ViewRotation.137d62cc.js"),["assets/ViewRotation.137d62cc.js","assets/ViewRotation.6be79e4b.css","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QToolbar.cab69cd0.js","assets/QItemSection.dc8b2532.js","assets/QList.dc10b5ea.js","assets/QCardSection.ad5c7ff8.js","assets/QExpansionItem.5c9c43fa.js","assets/QItemLabel.7ecff6cd.js","assets/use-model-toggle.a87aeb12.js","assets/QPage.ad8f831d.js","assets/rotation.2b9e0722.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"updateRotation",path:"/rotations/:id/update",component:()=>u(()=>import("./UpdateRotation.49383b90.js"),["assets/UpdateRotation.49383b90.js","assets/UpdateRotation.793d4138.css","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QExpansionItem.5c9c43fa.js","assets/QItemSection.dc8b2532.js","assets/QItemLabel.7ecff6cd.js","assets/use-model-toggle.a87aeb12.js","assets/QPage.ad8f831d.js","assets/rotation.2b9e0722.js","assets/SupervisorSelect.6ad7ef8a.js","assets/QSelect.895e741b.js","assets/QMenu.bdb281bc.js","assets/use-prevent-scroll.44e6db56.js","assets/hospital.c896e4ea.js","assets/supervisor.d2052c97.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"supervisors",path:"/supervisors",component:()=>u(()=>import("./Supervisors.eae38332.js"),["assets/Supervisors.eae38332.js","assets/QSpace.990ed13a.js","assets/vendor.3fb54e24.js","assets/use-key-composition.9a07a52d.js","assets/QCard.ba24e7ad.js","assets/QPage.ad8f831d.js","assets/QCardSection.ad5c7ff8.js","assets/QTable.c8883df2.js","assets/QItemLabel.7ecff6cd.js","assets/QList.dc10b5ea.js","assets/QMarkupTable.c64ee7d2.js","assets/QSelect.895e741b.js","assets/QItemSection.dc8b2532.js","assets/QMenu.bdb281bc.js","assets/use-model-toggle.a87aeb12.js","assets/use-prevent-scroll.44e6db56.js","assets/QCheckbox.6a62765b.js","assets/supervisor.d2052c97.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"createSupervisor",path:"/supervisor/create",component:()=>u(()=>import("./CreateSupervisor.286a1a19.js"),["assets/CreateSupervisor.286a1a19.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QForm.d38bc74e.js","assets/QPage.ad8f831d.js","assets/supervisor.d2052c97.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"viewSupervisor",path:"/supervisors/:id",component:()=>u(()=>import("./ViewSupervisor.7f08436a.js"),["assets/ViewSupervisor.7f08436a.js","assets/ViewSupervisor.73e6638c.css","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QPage.ad8f831d.js","assets/supervisor.d2052c97.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"updateSupervisor",path:"/supervisors/:id/update",component:()=>u(()=>import("./UpdateSupervisor.ba0dd6f8.js"),["assets/UpdateSupervisor.ba0dd6f8.js","assets/UpdateSupervisor.ce88eb8a.css","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardSection.ad5c7ff8.js","assets/QCardActions.f0d4dc64.js","assets/QPage.ad8f831d.js","assets/supervisor.d2052c97.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"viewProfile",path:"/profile",component:()=>u(()=>import("./ViewProfile.9acb56a5.js"),["assets/ViewProfile.9acb56a5.js","assets/QSpace.990ed13a.js","assets/vendor.3fb54e24.js","assets/use-key-composition.9a07a52d.js","assets/QCard.ba24e7ad.js","assets/QInput.c5c599b2.js","assets/QCardSection.ad5c7ff8.js","assets/QPage.ad8f831d.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"updateProfile",path:"/profile/update",component:()=>u(()=>import("./UpdateProfile.22abb928.js"),["assets/UpdateProfile.22abb928.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardActions.f0d4dc64.js","assets/QPage.ad8f831d.js","assets/user.109a9e01.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}},{name:"updatePassword",path:"/profile/password",component:()=>u(()=>import("./UpdatePassword.f2e588b0.js"),["assets/UpdatePassword.f2e588b0.js","assets/use-key-composition.9a07a52d.js","assets/vendor.3fb54e24.js","assets/QCard.ba24e7ad.js","assets/QSpace.990ed13a.js","assets/QInput.c5c599b2.js","assets/QCardActions.f0d4dc64.js","assets/QPage.ad8f831d.js","assets/user.109a9e01.js"]),meta:{requiresAuthentication:!0,allowedRoles:[s.USER]}}]}];var Ke=e=>{if(!e.meta.requiresAuthentication)return!0;const o=f().credentials;if(!(o!=null&&o.role))return"/login";if(e.meta.allowedRoles.some(i=>i===o.role))return!0};var Je=M({didAuthError:({error:e})=>e.graphQLErrors.some(n=>{var o;return((o=n.extensions)==null?void 0:o.code)==="FORBIDDEN"}),willAuthError:({authState:e})=>!e,getAuth:async({authState:e})=>{const n=f();if(!e){if(!n.credentials)return null;const o=n.credentials.token;if(o)return{token:o}}return console.log("Something wrong with auth state, logging out."),n.logout(),null},addAuthToOperation:({authState:e,operation:n})=>{if(!e||!e.token)return n;const o=typeof n.context.fetchOptions=="function"?n.context.fetchOptions():n.context.fetchOptions||{};return Q(n.kind,n,y(r({},n.context),{fetchOptions:y(r({},o),{headers:y(r({},o.headers),{Authorization:`Bearer ${e.token}`})})}))}});const m=(e,n,o,l)=>{const i=e[l.fieldName];return typeof i!="string"?null:new Date(i).toISOString().slice(0,10)};var Xe=V({updates:{Mutation:{createRotation(e,n,o){const l=t`
          {
            allRotations {
              id
            }
          }
        `;o.updateQuery({query:l},i=>!i||!i.allRotations?null:(i.allRotations.push(e.createRotation),i))}}},keys:{CaseDuration:()=>null,Statistics:()=>null},resolvers:{Consult:{dateOfBirth:m,procedureDate:m,admissionDate:m,diagnosisDate:m,dischargeDate:m,recurrenceDate:m,updatedAt:m,createdAt:m,deletedAt:m},Rotation:{startDate:m,endDate:m}}});const h=N(Z),D=b();D.use(H);h.use(D);const g=x({history:F(),routes:je});g.beforeEach(Ke);h.use(g);h.use(B,{url:"https://neurosurgery-logbook.herokuapp.com/graphql",exchanges:[G,Xe,Je,W]});h.use(z);h.use(j);h.mount("#app");export{qt as A,Lt as B,Ct as C,$t as D,Nt as E,Vt as F,Qt as G,kt as H,Mt as I,Ut as J,Ot as K,wt as L,Et as M,ot as N,lt as O,Pt as P,vt as Q,rt as R,dt as S,gt as T,s as U,Gt as V,J as _,mt as a,et as b,tt as c,nt as d,ut as e,Dt as f,st as g,At as h,xt as i,Ht as j,bt as k,Ft as l,Bt as m,_t as n,It as o,it as p,pt as q,St as r,Rt as s,at as t,f as u,ct as v,ft as w,ht as x,yt as y,Tt as z};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
