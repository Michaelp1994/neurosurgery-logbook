var y=Object.defineProperty;var h=Object.getOwnPropertySymbols;var M=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable;var I=(t,o,e)=>o in t?y(t,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[o]=e,f=(t,o)=>{for(var e in o||(o={}))M.call(o,e)&&I(t,e,o[e]);if(h)for(var e of h(o))b.call(o,e)&&I(t,e,o[e]);return t};import{D as u}from"./datetime.7d28628a.js";import{s as v,u as O,t as T,v as R,w as S,x as U}from"./index.c67102f5.js";import{af as P,J as d,x as g}from"./vendor.3fb54e24.js";const m={name:"",urn:"",selectedProcedures:[],hospitalId:null,supervisorId:null,rotationPeriodId:null,setLevelId:null,procedureDate:u.now().toISODate(),dateOfBirth:null,startTime:null,endTime:null,gender:null,ethnicityId:null,admissionDate:null,admissionCategoryId:null,unplannedReadmissionId:null,fundingTypeId:null,diagnosisDate:null,preManagementDiagnosis:null,recognisedCoMorbidities:null,asaGradeId:null,woundInfectionRiskId:null,typeOfAnaestheticId:null,prophylaxis:null,finalDiagnosis:null,pathologicalDiagnoses:null,unplannedIcuId:null,returnToTheatreId:null,dischargeDate:null,outcomeId:null,mortalityClassificationId:null,recurrenceDate:null,discussedAtMdm:null,comments:null,isCompleted:!1};function D(t,o){if(!o||!t)return{hours:0,minutes:0};const{hours:e,minutes:a}=u.fromISO(o).diff(u.fromISO(t),["hours","minutes"]).toObject();if(typeof e=="undefined"||typeof a=="undefined")throw Error;return{hours:Math.abs(e),minutes:Math.abs(a)}}function C(t,o){if(!t||!o)return 0;const e=u.fromISO(o),a=u.fromISO(t);return e.diff(a,["years","months"]).toObject().years}function E(){var l,r,s;const t=O(),o=T(),e=P(f({},m));e.selectedProcedures=[];const a={name:[n=>!!n||"Please enter the patient's name."],urn:[n=>!!n||"Please enter the patient's URN/CRN."],hospitalId:[n=>!!n||"Please select the hospital."],supervisorId:[n=>!!n||"Please select your supervisor."],rotationPeriodId:[n=>!!n||"Please select the rotation."],setLevelId:[n=>!!n||"Please select a SET level."],procedureDate:[n=>!!n||"Please enter the date of procedure."],dateOfBirth:[n=>!!n||"Please enter the patient's date of birth.",n=>n<e.procedureDate||"The date of birth cannot be earlier then the procedure date."],admissionDate:[n=>!!n||"Please enter a admission date."],fundingTypeId:[n=>!!n||"Please select a funding type."],diagnosisDate:[n=>!!n||"Please enter a diagnosis date."],dischargeDate:[n=>!!n||"Please enter a discharge date."]};t.currentRotation&&(console.log("User has a current Rotation, setting defaults."),console.log(t.currentRotation),e.rotationPeriodId=(l=t.currentRotation)==null?void 0:l.id,e.hospitalId=(r=t.currentRotation)==null?void 0:r.hospital.id,e.setLevelId=(s=t.currentRotation)==null?void 0:s.setLevel.id);const i=d(()=>D(e.startTime,e.endTime)),c=d(()=>C(e.dateOfBirth,e.procedureDate));function p(n){return o.executeMutation({input:n})}return{input:e,procedureDuration:i,patientAge:c,createConsult:p,rules:a}}function B(t){const o=R(),e=P(f({id:t},m)),a=g(),i=g(!0),c=d(()=>D(e.startTime,e.endTime)),p=d(()=>C(e.dateOfBirth,e.procedureDate));v({variables:{input:{id:t}}}).then(r=>{if(a.value=r.error.value,i.value=!1,!r.data.value)throw Error();Object.keys(e).forEach(s=>{e[s]=r.data.value.consult[s]}),e.id=t,e.rotationPeriodId=r.data.value.consult.rotationPeriod.id,e.selectedProcedures=r.data.value.consult.procedures.map(s=>({procedureId:s.procedure.id,supervisionLevel:s.supervisionLevel}))});function l(r){return o.executeMutation({input:r})}return{input:e,error:a,fetching:i,updateConsult:l,procedureDuration:c,patientAge:p}}function N(t){Object.assign(t,m),t.selectedProcedures=[]}function Q(){return U()}function _(t){return v({variables:{input:{id:t}}})}function k(){const t=S();function o(e){return console.log(e),t.executeMutation({input:{file:e}})}return{imageUpload:o}}export{k as a,_ as b,B as c,Q as g,N as r,E as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
